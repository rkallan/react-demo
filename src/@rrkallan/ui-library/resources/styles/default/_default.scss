@import "../variables/variables";
@import "../mixins/mixins";

@include addFontFace();

*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: none;
    background: transparent;
}

*:focus,
*:-moz-focusring {
    outline: none;
    box-shadow: none;
}

html {
    position: relative;
    display: flex;
    @include propValueFromMaps(map-get($font, default));
    overflow-y: scroll;
    min-width: map-get($breakpoints, xxxsmall);
    max-width: 100%;
    width: 100vw;
    min-height: 100%;
    text-size-adjust: none;
    background: safe-hsla($background);
    scroll-behavior: smooth;
    -webkit-tap-highlight-color: transparent;

    &[variant~="no-scroll"],
    &[variant~="show-modal"] {
        overflow: hidden;
    }
}

body {
    position: relative;
    display: flex;
    flex-direction: column;
    line-height: 1.5;
    margin: 0;
    padding: 0;
    width: 100%;
    max-width: 100%;
    min-height: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    .root {
        display: flex;
        flex-direction: column;
        flex: 1;
    }
}

article,
aside,
dialog,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
    display: block;
}

@include propValueFromMaps(map-get($font, heading));

p {
    @include propValueFromMaps(map-get($font, paragraph));

    &[variant~="bold"] {
        font-weight: bolder;
    }

    &[variant~="smaller"] {
        font-size: smaller;
    }

    &[variant~="larger"] {
        font-size: larger;
    }
}

hr {
    height: calc(map-get($gap, default) / 4);
    margin: map-get($gap, default) 0;
    background: safe-hsla(map-get($colorRed, default));
    border: none;
    box-sizing: content-box;
    overflow: visible;
    border-radius: map-get($borderRadius, default);
}

abbr[title],
abbr[data-original-title] {
    text-decoration: underline dotted;
    cursor: help;
    border-bottom: 0;
}

address {
    margin: map-get($gap, default) 0;
    font-style: inherit;
    line-height: inherit;
}

ol,
ul,
dl {
    list-style: none;
    margin: map-get($gap, default) 0;

    li {
        position: relative;
        padding: 0 0 0 map-get($gap, default);
    }
}

ul {
    li {
        &:after {
            display: block;
            position: absolute;
            content: "";
            width: 0.5rem;
            height: 0.5rem;
            left: 0;
            top: calc((1em * 1.5 - 0.5rem) / 2);
            border: 0.0125rem solid map-get($colorRed, default);
            border-radius: map-get($borderRadius, round);
        }
    }
}

ol {
    counter-reset: listNumber;
    list-style-type: none;

    li {
        padding-left: calc(map-get($gap, default) * 2);

        &:before {
            display: block;
            position: absolute;
            counter-increment: listNumber;
            content: counters(listNumber, ".") " ";
            left: 0;
            top: 0;
        }
    }
}

dl dl,
dl ol,
dl ul,
ol dl,
ul dl,
ol ol,
ol ul,
ul ol,
ul ul {
    margin: map-get($gap, default) 0;
    padding: 0 map-get($gap, default) 0 0;
}

dl {
    padding: 0 map-get($gap, default);
}

dt {
    font-weight: bolder;
}

dd {
    margin: 0;
    padding: 0 map-get($gap, default);
}

nav ul {
    margin: 0;
    padding: 0;
    list-style: none;

    li {
        &:after {
            display: none;
        }
    }
}

blockquote {
    position: relative;
    margin: 0;
    font-size: 0.875rem;
    line-height: 1.25;
    font-style: italic;
    color: safe-hsla(map-get($colorYellow, default));
    padding: 1rem 2rem 1rem 2rem;
    border-left: 0.5rem solid safe-hsla(map-get($colorRed, default));
    background: transparent;

    &::before,
    &::after {
        position: absolute;
        font-size: 2rem;
        line-height: 1;
        color: safe-hsla(map-get($colorYellow, default));
    }

    &::before {
        content: "\201C";
        left: 0.5rem;
        top: 1rem;
    }

    &::after {
        content: "\201E";
        right: 1rem;
        bottom: 1rem;
    }
}

dfn {
    font-style: italic;
}

b,
strong {
    font-weight: bolder;
}

small {
    font-size: small;
}

sub,
sup {
    position: relative;
    font-size: small;
    line-height: 0;
    vertical-align: baseline;
}

sub {
    bottom: -0.25rem;
}

sup {
    top: -0.5rem;
}

a {
    @include propValueFromMaps(map-get($font, link));

    &:not([href]):not([tabindex]) {
        color: inherit;
        text-decoration: none;
    }
}

pre,
code,
kbd,
samp {
    font-family: "Consolas", monospace;
    font-size: smaller;
    border: 0.0625rem solid safe-hsla(map-get($colorBlack, default));
    border-radius: map-get($borderRadius, small);
    padding: 0.125rem 0.25rem;
    vertical-align: baseline;
}

pre {
    margin: 0;
    overflow: auto;
}

figure {
    margin: 0;
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
    border-style: none;
}

a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
    font: inherit;
    touch-action: manipulation;
}

table {
    width: 100%;
    border-collapse: collapse;
    border-spacing: 0;
}

caption {
    padding: 0;
    color: inherit;
    text-align: left;
    caption-side: bottom;
}

th {
    text-align: left;
}

label {
    display: block;
    margin: 0;
    padding: 0;
    cursor: pointer;
}

button:focus {
    outline: none;
    box-shadow: none;
}

input,
button,
select,
optgroup,
textarea {
    margin: 0;
    padding: 0.25rem;
    border: 0.0625rem solid safe-hsla(map-get($colorBlack, default), 0.5);
    border-radius: map-get($borderRadius, small);
    font-family: inherit;
    font-size: 1rem;
    line-height: inherit;
}

button,
input {
    overflow: visible;
}

button,
select {
    text-transform: inherit;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
    cursor: pointer;
    -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
    padding: 0;
    border-style: none;
}

input[type="radio"],
input[type="checkbox"] {
    box-sizing: border-box;
    padding: 0;
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
    -webkit-appearance: listbox;
}

textarea {
    overflow: auto;
    resize: vertical;
}

fieldset {
    min-width: 0;
    padding: 0;
    margin: 0;
    border: 0;
}

legend {
    display: block;
    width: 100%;
    max-width: 100%;
    padding: 0;
    margin: map-get($gap, default) 0;
    font-size: inherit;
    line-height: inherit;
    color: inherit;
    white-space: normal;
}

progress {
    vertical-align: baseline;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

[type="search"] {
    outline-offset: -0.125rem;
    -webkit-appearance: none;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

::-webkit-file-upload-button {
    font: inherit;
    -webkit-appearance: button;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
    animation: autofill 0s forwards;
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto;
}

::-webkit-input-placeholder {
    color: inherit;
    opacity: map-get($opacity, disabled);
}

::-webkit-search-decoration {
    -webkit-appearance: none;
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit;
}

::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

:-moz-focusring {
    outline: 0;
}

:-moz-ui-invalid {
    box-shadow: none;
}

@keyframes autofill {
    100% {
        background: transparent;
        color: inherit;
    }
}

output {
    display: inline-block;
}

summary {
    display: list-item;
}

canvas {
    display: inline-block;
}

template {
    display: none;
}

dialog {
    background-color: safe-hsla(map-get($colorWhite, default));
    border: solid;
    color: safe-hsla(map-get($colorBlack, default));
    display: block;
    height: -moz-fit-content;
    height: -webkit-fit-content;
    height: fit-content;
    left: 0;
    margin: auto;
    padding: map-get($gap, default);
    position: absolute;
    right: 0;
    width: -moz-fit-content;
    width: -webkit-fit-content;
    width: fit-content;
}

dialog:not([open]) {
    display: none;
}

*[hidden],
[hidden],
[state="hidden"] {
    max-height: 0;
    visibility: hidden;
}

[tabindex="-1"]:focus {
    outline: none;
}

.application {
    position: relative;
    display: flex;
    flex-direction: column;
    min-height: 100%;
    min-width: 100%;
    isolation: isolate;
}
