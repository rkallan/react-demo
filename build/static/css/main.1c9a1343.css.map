{"version":3,"file":"static/css/main.1c9a1343.css","mappings":"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","sources":["@rrkallan/ui-library/Loading/resources/styles/loading.module.scss","@rrkallan/ui-library/resources/styles/default/_default.scss","@rrkallan/ui-library/resources/styles/mixins/_font-face.scss","@rrkallan/ui-library/resources/styles/mixins/_mapsConverter.scss","@rrkallan/ui-library/Container/resources/styles/container.module.scss","@rrkallan/ui-library/Select/resources/styles/select.module.scss"],"sourcesContent":["@import \"resources/styles/mixins/mixins\";\n@import \"resources/styles/variables/variables\";\n\n@keyframes preloader {\n    100% {\n        transform: scale(1.5);\n    }\n}\n\n.container {\n    display: flex;\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    color: inherit;\n    max-height: 100%;\n\n    &[variant~=\"min-height\"] {\n        min-height: 2.25rem;\n    }\n\n    &[variant~=\"color-inherit\"] {\n        color: inherit;\n    }\n\n    .text {\n        font-weight: 700;\n        padding-right: 0.25rem;\n    }\n\n    .dots {\n        border-radius: 100%;\n        border: 0.125rem solid currentColor;\n        margin: 0.375rem 0.25rem 0 0;\n        animation: preloader 0.6s ease-in-out alternate infinite;\n    }\n}\n","@import \"../variables/variables\";\n@import \"../mixins/mixins\";\n\n@include addFontFace();\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: transparent;\n}\n\n*:focus,\n*:-moz-focusring {\n    outline: none;\n    box-shadow: none;\n}\n\nhtml {\n    position: relative;\n    display: flex;\n    @include propValueFromMaps(map-get($font, default));\n    overflow-y: scroll;\n    min-width: map-get($breakpoints, xxxsmall);\n    max-width: 100%;\n    width: 100vw;\n    min-height: 100%;\n    text-size-adjust: none;\n    background: safe-hsla($background);\n    scroll-behavior: smooth;\n    -webkit-tap-highlight-color: transparent;\n\n    &[variant~=\"no-scroll\"],\n    &[variant~=\"show-modal\"] {\n        overflow: hidden;\n    }\n}\n\nbody {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    max-width: 100%;\n    min-height: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    .root {\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n    }\n}\n\narticle,\naside,\ndialog,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nnav,\nsection {\n    display: block;\n}\n\n@include propValueFromMaps(map-get($font, heading));\n\np {\n    @include propValueFromMaps(map-get($font, paragraph));\n\n    &[variant~=\"bold\"] {\n        font-weight: bolder;\n    }\n\n    &[variant~=\"smaller\"] {\n        font-size: smaller;\n    }\n\n    &[variant~=\"larger\"] {\n        font-size: larger;\n    }\n}\n\nhr {\n    height: calc(map-get($gap, default) / 4);\n    margin: map-get($gap, default) 0;\n    background: safe-hsla(map-get($colorRed, default));\n    border: none;\n    box-sizing: content-box;\n    overflow: visible;\n    border-radius: map-get($borderRadius, default);\n}\n\nabbr[title],\nabbr[data-original-title] {\n    text-decoration: underline dotted;\n    cursor: help;\n    border-bottom: 0;\n}\n\naddress {\n    margin: map-get($gap, default) 0;\n    font-style: inherit;\n    line-height: inherit;\n}\n\nol,\nul,\ndl {\n    list-style: none;\n    margin: map-get($gap, default) 0;\n\n    li {\n        position: relative;\n        padding: 0 0 0 map-get($gap, default);\n    }\n}\n\nul {\n    li {\n        &:after {\n            display: block;\n            position: absolute;\n            content: \"\";\n            width: 0.5rem;\n            height: 0.5rem;\n            left: 0;\n            top: calc((1em * 1.5 - 0.5rem) / 2);\n            border: 0.0125rem solid map-get($colorRed, default);\n            border-radius: map-get($borderRadius, round);\n        }\n    }\n}\n\nol {\n    counter-reset: listNumber;\n    list-style-type: none;\n\n    li {\n        padding-left: calc(map-get($gap, default) * 2);\n\n        &:before {\n            display: block;\n            position: absolute;\n            counter-increment: listNumber;\n            content: counters(listNumber, \".\") \" \";\n            left: 0;\n            top: 0;\n        }\n    }\n}\n\ndl dl,\ndl ol,\ndl ul,\nol dl,\nul dl,\nol ol,\nol ul,\nul ol,\nul ul {\n    margin: map-get($gap, default) 0;\n    padding: 0 map-get($gap, default) 0 0;\n}\n\ndl {\n    padding: 0 map-get($gap, default);\n}\n\ndt {\n    font-weight: bolder;\n}\n\ndd {\n    margin: 0;\n    padding: 0 map-get($gap, default);\n}\n\nnav ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n\n    li {\n        &:after {\n            display: none;\n        }\n    }\n}\n\nblockquote {\n    position: relative;\n    margin: 0;\n    font-size: 0.875rem;\n    line-height: 1.25;\n    font-style: italic;\n    color: safe-hsla(map-get($colorYellow, default));\n    padding: 1rem 2rem 1rem 2rem;\n    border-left: 0.5rem solid safe-hsla(map-get($colorRed, default));\n    background: transparent;\n\n    &::before,\n    &::after {\n        position: absolute;\n        font-size: 2rem;\n        line-height: 1;\n        color: safe-hsla(map-get($colorYellow, default));\n    }\n\n    &::before {\n        content: \"\\201C\";\n        left: 0.5rem;\n        top: 1rem;\n    }\n\n    &::after {\n        content: \"\\201E\";\n        right: 1rem;\n        bottom: 1rem;\n    }\n}\n\ndfn {\n    font-style: italic;\n}\n\nb,\nstrong {\n    font-weight: bolder;\n}\n\nsmall {\n    font-size: small;\n}\n\nsub,\nsup {\n    position: relative;\n    font-size: small;\n    line-height: 0;\n    vertical-align: baseline;\n}\n\nsub {\n    bottom: -0.25rem;\n}\n\nsup {\n    top: -0.5rem;\n}\n\na {\n    @include propValueFromMaps(map-get($font, link));\n\n    &:not([href]):not([tabindex]) {\n        color: inherit;\n        text-decoration: none;\n    }\n}\n\npre,\ncode,\nkbd,\nsamp {\n    font-family: \"Consolas\", monospace;\n    font-size: smaller;\n    border: 0.0625rem solid safe-hsla(map-get($colorBlack, default));\n    border-radius: map-get($borderRadius, small);\n    padding: 0.125rem 0.25rem;\n    vertical-align: baseline;\n}\n\npre {\n    margin: 0;\n    overflow: auto;\n}\n\nfigure {\n    margin: 0;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n    display: block;\n    max-width: 100%;\n    border-style: none;\n}\n\na,\narea,\nbutton,\n[role=\"button\"],\ninput,\nlabel,\nselect,\nsummary,\ntextarea {\n    font: inherit;\n    touch-action: manipulation;\n}\n\ntable {\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\ncaption {\n    padding: 0;\n    color: inherit;\n    text-align: left;\n    caption-side: bottom;\n}\n\nth {\n    text-align: left;\n}\n\nlabel {\n    display: block;\n    margin: 0;\n    padding: 0;\n    cursor: pointer;\n}\n\nbutton:focus {\n    outline: none;\n    box-shadow: none;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n    margin: 0;\n    padding: 0.25rem;\n    border: 0.0625rem solid safe-hsla(map-get($colorBlack, default), 0.5);\n    border-radius: map-get($borderRadius, small);\n    font-family: inherit;\n    font-size: 1rem;\n    line-height: inherit;\n}\n\nbutton,\ninput {\n    overflow: visible;\n}\n\nbutton,\nselect {\n    text-transform: inherit;\n}\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n    cursor: pointer;\n    -webkit-appearance: button;\n}\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n    padding: 0;\n    border-style: none;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n    box-sizing: border-box;\n    padding: 0;\n}\n\ninput[type=\"date\"],\ninput[type=\"time\"],\ninput[type=\"datetime-local\"],\ninput[type=\"month\"] {\n    -webkit-appearance: listbox;\n}\n\ntextarea {\n    overflow: auto;\n    resize: vertical;\n}\n\nfieldset {\n    min-width: 0;\n    padding: 0;\n    margin: 0;\n    border: 0;\n}\n\nlegend {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    padding: 0;\n    margin: map-get($gap, default) 0;\n    font-size: inherit;\n    line-height: inherit;\n    color: inherit;\n    white-space: normal;\n}\n\nprogress {\n    vertical-align: baseline;\n}\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n}\n\n[type=\"search\"] {\n    outline-offset: -0.125rem;\n    -webkit-appearance: none;\n}\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n    font: inherit;\n    -webkit-appearance: button;\n}\n\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus,\ninput:-webkit-autofill:active {\n    animation: autofill 0s forwards;\n}\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n    height: auto;\n}\n\n::-webkit-input-placeholder {\n    color: inherit;\n    opacity: map-get($opacity, disabled);\n}\n\n::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    font: inherit;\n}\n\n::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n}\n\n:-moz-focusring {\n    outline: 0;\n}\n\n:-moz-ui-invalid {\n    box-shadow: none;\n}\n\n@keyframes autofill {\n    100% {\n        background: transparent;\n        color: inherit;\n    }\n}\n\noutput {\n    display: inline-block;\n}\n\nsummary {\n    display: list-item;\n}\n\ncanvas {\n    display: inline-block;\n}\n\ntemplate {\n    display: none;\n}\n\ndialog {\n    background-color: safe-hsla(map-get($colorWhite, default));\n    border: solid;\n    color: safe-hsla(map-get($colorBlack, default));\n    display: block;\n    height: -moz-fit-content;\n    height: -webkit-fit-content;\n    height: fit-content;\n    left: 0;\n    margin: auto;\n    padding: map-get($gap, default);\n    position: absolute;\n    right: 0;\n    width: -moz-fit-content;\n    width: -webkit-fit-content;\n    width: fit-content;\n}\n\ndialog:not([open]) {\n    display: none;\n}\n\n*[hidden],\n[hidden],\n[state=\"hidden\"] {\n    max-height: 0;\n    visibility: hidden;\n}\n\n[tabindex=\"-1\"]:focus {\n    outline: none;\n}\n\n.application {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n    min-width: 100%;\n    isolation: isolate;\n}\n","@mixin addFontFace($fontFamily: $fontFamily) {\n    @each $font, $props in $fontFamily {\n        $fontFamilyName: map-get($props, fontFamily);\n        $fontFileName: $font;\n        $fontStyle: map-get($props, fontStyle);\n        $fontWeight: map-get($props, fontWeight);\n        $fontUrlPath: \"../../fonts/\";\n\n        @if not $fontStyle {\n            $fontStyle: (\"normal\");\n        }\n\n        @if not $fontWeight {\n            $fontWeight: \"normal\";\n        }\n\n        @each $style in $fontStyle {\n            @if $style != \"normal\" {\n                $fontFileName: \"#{$font}\";\n                $fontFamilyName: \"#{$fontFamilyName}#{capitalize($style)}\";\n            }\n\n            @font-face {\n                font-family: $fontFamilyName;\n                src: local(\"#{$fontFileName}\"), local(\"#{str-replace($fontFileName, \"-\", \"\")}\"),\n                    url(\"#{$fontUrlPath}#{$fontFileName}.woff2\") format(\"woff2\"), url(\"#{$fontUrlPath}#{$fontFileName}.woff\") format(\"woff\");\n                font-weight: $fontWeight;\n                font-style: $style;\n                font-display: block;\n            }\n        }\n    }\n}\n","@mixin propValueFromMaps($map) {\n    @if type-of($map) == \"map\" {\n        @each $property, $value in $map {\n            @if str-slice($property, 1, 1) != \"_\" {\n                #{$property}: $value;\n            } @else if str-slice($property, 1, 1) == \"_\" {\n                @if type-of(map-get($map, $property)) == \"map\" {\n                    $selector: str-slice($property, 2);\n                    @if $selector == \"hover\" {\n                        $selector: \"&:#{str-slice($property, 2)}, &:focus, &:focus-visible, &:focus-within\";\n                    }\n                    @if $selector == \"after\" {\n                        $selector: \"&:#{str-slice($property, 2)}\";\n                    }\n                    @if $selector == \"active\" {\n                        $selector: \"&:#{str-slice($property, 2)}\";\n                    }\n                    @if $selector == \"hoverAfter\" {\n                        $selector: \"&:hover:after, &:focus:after, &:focus-visible:after, &:focus-within:after\";\n                    }\n\n                    #{$selector} {\n                        @each $propHover, $valueHover in map-get($map, $property) {\n                            @if str-slice($propHover, 1, 1) == \"_\" {\n                                $selector2: str-slice($propHover, 2);\n                                @if $selector2 == \"after\" {\n                                    $selector2: \"&:#{str-slice($propHover, 2)}\";\n                                }\n                            }\n\n                            #{$propHover}: $valueHover;\n                        }\n                    }\n                }\n            }\n        }\n    } @else {\n        @warn \"Unfortunately, `#{$map}` is not a SASS map. \";\n    }\n}\n","@import \"resources/styles/mixins/mixins\";\n@import \"resources/styles/variables/variables\";\n\n.container {\n    display: flex;\n    flex: auto;\n    flex-direction: column;\n    align-content: center;\n    justify-content: flex-start;\n    color: inherit;\n    min-width: 100%;\n    padding: map-get($gap, large);\n\n    &[variant~=\"full-width\"] {\n        padding: 0;\n    }\n\n    &[variant~=\"black\"] {\n        background-color: safe-hsla(map-get($colorBlack, lighter));\n        color: safe-hsla(map-get($colorWhite, default));\n\n        a {\n            color: inherit;\n        }\n    }\n\n    &[variant~=\"red\"] {\n        background-color: safe-hsla(map-get($colorRed, default));\n        color: safe-hsla(map-get($colorWhite, default));\n\n        a {\n            color: inherit;\n        }\n    }\n\n    &[variant~=\"default\"],\n    &[variant~=\"white\"] {\n        background-color: safe-hsla(map-get($colorWhite, default));\n        color: safe-hsla(map-get($colorBlack, lighter));\n\n        a {\n            color: inherit;\n        }\n    }\n\n    &[variant~=\"text-color-red\"] {\n        color: safe-hsla(map-get($colorRed, default));\n    }\n\n    .unit {\n        display: flex;\n        flex-direction: column;\n    }\n}\n","@import \"resources/styles/variables/variables\";\n@import \"resources/styles/mixins/mixins\";\n\n.container {\n    position: relative;\n    display: flex;\n    align-items: flex-end;\n    margin: 0;\n    padding: 0 0 0 0;\n    overflow: hidden;\n    color: safe-hsla(map-get($colorBlack, default), 1);\n\n    &[variant~=\"color-big-stone\"] {\n        color: safe-hsla(map-get($colorBlack, default));\n    }\n\n    &[variant~=\"disabled\"],\n    &[variant~=\"read-only\"] {\n        opacity: map-get($opacity, disabled);\n        pointer-events: none;\n    }\n\n    .unit {\n        display: flex;\n        width: 100%;\n        flex-direction: column;\n\n        .label {\n            position: absolute;\n            display: block;\n            width: 100%;\n            font-weight: 300;\n            top: 0.18725rem;\n            left: 0;\n            padding-left: 0.5rem;\n            user-select: none;\n        }\n\n        .select-container {\n            position: relative;\n            display: flex;\n            width: 100%;\n            align-items: center;\n            border-radius: map-get($borderRadius, small);\n            background: safe-hsla(map-get($colorWhite, default));\n        }\n    }\n\n    .select {\n        position: relative;\n        display: block;\n        font-size: 1rem;\n        line-height: 1.75rem;\n        padding: 0 4rem 0 1rem;\n        width: 100%;\n        max-width: 100%;\n        margin: 0;\n        border: 0;\n        color: inherit;\n        box-shadow: 0;\n        border-radius: 0;\n        background-color: transparent;\n        z-index: 5;\n        appearance: none;\n        cursor: pointer;\n        transition: map-get($transition, default);\n\n        &::-ms-expand {\n            display: none;\n        }\n\n        &:focus {\n            outline: none;\n            color: inherit;\n        }\n\n        optgroup {\n            color: safe-hsla(map-get($colorBlack, default));\n        }\n\n        option {\n            font-weight: normal;\n            color: safe-hsla(map-get($colorBlack, default));\n            cursor: pointer;\n\n            &:disabled {\n                color: safe-hsla(map-get($colorBlack, default), map-get($opacity, disabled));\n            }\n        }\n    }\n\n    .carrot {\n        position: absolute;\n        right: -0.125rem;\n        top: -0.125rem;\n        height: calc(100% + 0.125rem * 2);\n        width: 2rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 5;\n        margin: 0 auto;\n        color: safe-hsla(map-get($colorWhite, default));\n        background: safe-hsla(map-get($colorBlack, default));\n        border-top-right-radius: 0.5rem;\n        border-bottom-right-radius: 0.5rem;\n    }\n}\n"],"names":[],"sourceRoot":""}