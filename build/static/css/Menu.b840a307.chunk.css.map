{"version":3,"file":"static/css/Menu.b840a307.chunk.css","mappings":"AAGA,uBACI,aACA,sBACA,uBAEA,0DAII,oBAFA,aACA,mBAEA,mBAEA,UANA,kBAOA,+BACA,sBAHA,kBAGA,CCbA,wBDIJ,0DAYQ,aAEA,SAAQ,CADR,iBACA,EAGJ,wFAOI,uBAFA,SACA,mBALA,aACA,mBACA,SACA,SAGA,CAKQ,8RACI,gBAKZ,mHAMI,eAHA,YAFA,kBAGA,uBACA,4BAHA,YAIA,CAEA,yIAOI,gBADA,qBAJA,cAGA,cAFA,OAKA,UAPA,kBAQA,uBACA,gCANA,UAMA,CAEA,qJACI,MAGJ,4SAEI,WAGJ,sJACI,SAMA,+UAII,OACA,SAAQ,CAHR,MACA,OAEA,CAEJ,wKACI,wBAEJ,wKACI,yBAQxB,yCAWI,yBACA,sCAVA,aACA,sBACA,SACA,SAGA,aADA,UAOA,gBARA,aALA,kBASA,YADA,sBAMA,+BAFA,iBAEA,CAEA,2DAGI,mBADA,UADA,mBAGA,YCnHJ,wBD+GA,2DAOQ,WAxBZ,yCAuCQ,uBAFA,eACA,gBARA,mBACA,gBACA,UAGA,kCAFA,UAJA,kBAKA,WAEA,kBAGA,CAEA,2DAEI,mBADA,kBACA,CAnBA,CAuBR,2DAII,qBAHA,aACA,sBACA,8BACA,CAEA,6EAKI,qBAEA,WANA,aAEA,sBAGA,yBAJA,kBAEA,UAGA,CAEA,mFACI,aAGJ,uQAGI,kBAEA,6TACI,sBACA,+UACI,WAMR,wGACI,eAIR,+FACI,kBACA,+BAEA,qGAUI,sBALA,gBACA,WAEA,gBANA,OAEA,cAOA,gBAVA,kBAEA,QAMA,+BAFA,OAIA","sources":["components/Menu/resources/styles/menu.module.scss","@rrkallan/ui-library/resources/styles/mixins/_breakpoint.scss"],"sourcesContent":["@import \"./src/resources/styles/variables/variables\";\n@import \"./src/resources/styles/mixins/mixins\";\n\n.container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    .mobileButtonContainer {\n        position: absolute;\n        display: flex;\n        flex-direction: row;\n        align-self: flex-end;\n        max-height: 1000rem;\n        visibility: visible;\n        opacity: 1;\n        transition: map-get($transition, default);\n        transition-delay: 50ms;\n\n        @include respond-to(\"medium\") {\n            max-height: 0;\n            visibility: hidden;\n            opacity: 0;\n        }\n\n        .mobileButtonUnit {\n            display: flex;\n            flex-direction: row;\n            margin: 0;\n            padding: 0;\n            border: 0;\n            border-radius: map-get($borderRadius, round);\n            background: transparent;\n\n            &:hover,\n            &:focus {\n                .iconContainer {\n                    .iconUnit {\n                        background: safe-hsla(map-get($colorBlack, default));\n                    }\n                }\n            }\n\n            .iconContainer {\n                position: relative;\n                width: 1.5rem;\n                height: 1rem;\n                transform: rotate(0deg);\n                transition: 50ms ease-in-out;\n                cursor: pointer;\n\n                .iconUnit {\n                    position: absolute;\n                    display: block;\n                    left: 0;\n                    width: 100%;\n                    height: 0.25rem;\n                    border-radius: 0.25rem;\n                    background: safe-hsla(map-get($colorWhite, default));\n                    opacity: 1;\n                    transform: rotate(0deg);\n                    transition: all 250ms ease-in-out;\n\n                    &:nth-child(1) {\n                        top: 0;\n                    }\n\n                    &:nth-child(2),\n                    &:nth-child(3) {\n                        top: 0.35rem;\n                    }\n\n                    &:nth-child(4) {\n                        bottom: 0;\n                    }\n                }\n\n                &[state~=\"is-active\"] {\n                    .iconUnit {\n                        &:nth-child(1),\n                        &:nth-child(4) {\n                            top: 0;\n                            width: 0;\n                            left: 0;\n                            opacity: 0;\n                        }\n                        &:nth-child(2) {\n                            transform: rotate(45deg);\n                        }\n                        &:nth-child(3) {\n                            transform: rotate(-45deg);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    .unit {\n        position: absolute;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        margin: 0;\n        padding: 1rem;\n        opacity: 0;\n        max-height: 0;\n        top: calc(100% + 1rem);\n        right: -2rem;\n        background-color: safe-hsla(map-get($colorRed, default));\n        box-shadow: safe-hsla(map-get($colorBlack, default), 0.25) 0px 2px 10px;\n        visibility: hidden;\n        overflow: hidden;\n        transition: map-get($transition, default);\n\n        &[state~=\"is-active\"] {\n            visibility: visible;\n            opacity: 1;\n            max-height: 1000rem;\n            width: 100vw;\n\n            @include respond-to(\"medium\") {\n                width: auto;\n            }\n        }\n\n        @include respond-to(\"medium\") {\n            position: relative;\n            flex-direction: row;\n            max-height: unset;\n            opacity: 1;\n            padding: 0;\n            right: unset;\n            overflow: unset;\n            visibility: visible;\n            border: unset;\n            box-shadow: unset;\n            background: transparent;\n\n            .item {\n                flex-direction: row;\n                align-items: unset;\n            }\n        }\n\n        .item {\n            display: flex;\n            flex-direction: column;\n            transition: map-get($transition, default);\n            align-items: flex-end;\n\n            .link {\n                display: flex;\n                position: relative;\n                flex-direction: column;\n                width: 100%;\n                align-items: flex-end;\n                justify-content: flex-end;\n                color: safe-hsla(map-get($colorWhite, default));\n\n                &:after {\n                    display: none;\n                }\n\n                &[variant~=\"is-active\"],\n                &:hover,\n                &:focus {\n                    position: relative;\n\n                    .text {\n                        transform: scale(1.05);\n                        &:after {\n                            width: 100%;\n                        }\n                    }\n                }\n\n                &[variant~=\"is-active\"] {\n                    &:active {\n                        transform: unset;\n                    }\n                }\n\n                .text {\n                    position: relative;\n                    transition: map-get($transition, default);\n\n                    &:after {\n                        position: absolute;\n                        left: 0;\n                        right: 0;\n                        margin: 0 auto;\n                        bottom: -0.125rem;\n                        content: \"\";\n                        width: 0;\n                        height: 0.0625rem;\n                        transition: map-get($transition, default);\n                        background-color: safe-hsla(map-get($colorWhite, default));\n                        overflow: hidden;\n                    }\n                }\n            }\n        }\n    }\n}\n","@mixin respond-to($breakpoint) {\n    // If the key exists in the map\n    @if map-has-key($breakpoints, $breakpoint) {\n        // Prints a media query based on the value\n        @media (min-width: map-get($breakpoints, $breakpoint)) {\n            @content;\n        }\n    }\n\n    // If the key doesn't exist in the map\n    @else {\n        @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n    }\n}\n"],"names":[],"sourceRoot":""}