{"version":3,"file":"static/css/TvShowsList.f1c981a1.chunk.css","mappings":"AAGA,6BACI,aACA,mBACA,mBACA,eACA,SAEA,gDACI,oBAGJ,kDAGI,+BACA,SAGA,8BADA,aALA,wCAIA,+BAHA,UAKA,CAGJ,qDACI,aACA,sBAMA,eADA,gBAFA,oBACA,iBAFA,iBAKA,+BANA,uBAMA,CC7BA,wBDoBJ,qDAYQ,mCChCJ,wBDoBJ,qDAgBQ,0BCpCJ,wBDoBJ,qDAqBQ,kBADA,uBACA,ECzCJ,wBDoBJ,qDAyBQ,mCC7CJ,wBDoBJ,qDA6BQ,6BAGJ,6EAQI,sBAHA,qBACA,6CAJA,aACA,sBACA,YAMA,yBAHA,gBANA,kBAQA,8BACA,CAEA,sKAEI,oDACA,UAGJ,+GAEI,SADA,iBACA,CAEA,0IAII,oCAFA,aADA,kBAEA,UACA,CAKZ,8EAGI,cAFA,kBAIA,gBAHA,aAKA,kBAHA,uBAEA,eACA","sources":["pages/TvShows/TvShowsList/resources/styles/tvShowList.module.scss","@rrkallan/ui-library/resources/styles/mixins/_breakpoint.scss"],"sourcesContent":["@import \"resources/styles/variables/variables\";\n@import \"resources/styles/mixins/mixins\";\n\n.container {\n    display: flex;\n    flex-flow: row wrap;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: map-get($gap, default);\n\n    &[variant~=\"overview\"] {\n        padding-bottom: map-get($gap, default);\n    }\n\n    &[variant~=\"pagination\"] {\n        position: sticky;\n        z-index: 10;\n        background: safe-hsla(map-get($colorWhite, default), 0.95);\n        bottom: 0;\n        transition: map-get($transition, default);\n        padding: map-get($gap, default);\n        box-shadow: #5d5b5b 0px 2px 10px;\n    }\n\n    .unit {\n        display: flex;\n        flex-direction: column;\n        width: calc((100% - map-get($gap, default)) / 2);\n        min-width: 8.5rem;\n        max-width: 13.125rem;\n        min-height: 15rem;\n        max-height: 100%;\n        font-size: 1rem;\n        transition: map-get($transition, default);\n\n        @include respond-to(\"xxsmall\") {\n            width: calc((100% - map-get($gap, default) * 2) / 3);\n        }\n\n        @include respond-to(\"small\") {\n            width: calc((100% - map-get($gap, default) * 3) / 4);\n        }\n\n        @include respond-to(\"large\") {\n            width: calc((100% - map-get($gap, default) * 4) / 5);\n            font-size: 1.25rem;\n        }\n\n        @include respond-to(\"xlarge\") {\n            width: calc((100% - map-get($gap, default) * 5) / 6);\n        }\n\n        @include respond-to(\"xxlarge\") {\n            width: calc((100% - map-get($gap, default) * 7) / 8);\n        }\n\n        .link {\n            position: relative;\n            display: flex;\n            flex-direction: column;\n            height: 100%;\n            border-radius: map-get($borderRadius, small);\n            box-shadow: hsl(0deg 0% 0% / 25%) 0 0.125rem 0.625rem;\n            overflow: hidden;\n            background-color: safe-hsla(map-get($colorWhite, default));\n            transition: map-get($transition, default);\n            justify-content: flex-end;\n\n            &:hover,\n            &:focus {\n                transform: scale(1.05);\n                z-index: 2;\n            }\n\n            .imageContainer {\n                position: relative;\n                flex: 1;\n\n                .caption {\n                    position: absolute;\n                    bottom: -1rem;\n                    width: 100%;\n                    background-color: safe-hsla(map-get($colorWhite, default), 0.5);\n                }\n            }\n        }\n\n        .title {\n            font-size: inherit;\n            padding: map-get($gap, default);\n            color: safe-hsla(map-get($colorRed, default));\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: pre;\n            text-align: center;\n        }\n    }\n}\n","@mixin respond-to($breakpoint) {\n    // If the key exists in the map\n    @if map-has-key($breakpoints, $breakpoint) {\n        // Prints a media query based on the value\n        @media (min-width: map-get($breakpoints, $breakpoint)) {\n            @content;\n        }\n    }\n\n    // If the key doesn't exist in the map\n    @else {\n        @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n    }\n}\n"],"names":[],"sourceRoot":""}