{"version":3,"file":"static/js/Pagination.fbfd0fae.chunk.js","mappings":"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","sources":["@rrkallan/react-hooks/useBoundingClientRect/index.js","@rrkallan/react-hooks/useDebounce/index.js","@rrkallan/react-hooks/useIsomorphicLayoutEffect/index.tsx","@rrkallan/react-hooks/useOnClickOutside/index.tsx","@rrkallan/react-hooks/usePagination/index.js","@rrkallan/react-hooks/useScrollPosition/index.tsx","webpack://rrkallan-demo/./src/@rrkallan/ui-library/Pagination/resources/styles/pagination.module.scss?0e83","@rrkallan/ui-library/Pagination/index.jsx"],"sourcesContent":["import { useState, useLayoutEffect } from \"react\";\n\nconst convertUnit = ({ data, unit = \"rem\", includeUnit = true }) => {\n    const divideValue = unit === \"rem\" ? 16 : 1;\n    const newData = Object.fromEntries(\n        Array.from(Object.keys(DOMRect.prototype), (key) => {\n            const valueCalculated = data[key] / divideValue || 0;\n            const value = includeUnit ? `${valueCalculated}${unit}` : valueCalculated;\n\n            return [key, value];\n        })\n    );\n    return newData;\n};\n\nfunction useBoundingClientRect({ element, delay = 100, includeUnit = true }) {\n    const [boundingClientRect, setBoundingClientRect] = useState(() => element?.current?.getBoundingClientRect());\n\n    useLayoutEffect(() => {\n        let timeoutId = null;\n        let ignore = false;\n\n        const resizeListener = () => {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => {\n                const clientRect = element?.current?.getBoundingClientRect() || {};\n                const value = convertUnit({ data: clientRect, includeUnit });\n\n                setBoundingClientRect(value);\n            }, delay);\n        };\n\n        if (!ignore) resizeListener();\n        if (!ignore) window.addEventListener(\"resize\", resizeListener);\n\n        return () => {\n            ignore = true;\n            window.removeEventListener(\"resize\", resizeListener);\n        };\n    }, [delay, element, includeUnit]);\n\n    return boundingClientRect;\n}\n\nexport default useBoundingClientRect;\n","import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useEffect, useLayoutEffect } from \"react\";\n\nconst useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","import { RefObject } from \"react\";\n\nimport useEventListener from \"../useEventListener\";\n\ntype Handler = (event: MouseEvent) => void;\n\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n    ref: RefObject<T>,\n    handler: Handler,\n    mouseEvent: \"mousedown\" | \"mouseup\" = \"mousedown\"\n): void {\n    useEventListener(mouseEvent, (event) => {\n        const el = ref?.current;\n\n        if (!el || el.contains(event.target as Node)) {\n            return;\n        }\n\n        handler(event);\n    });\n}\n\nexport default useOnClickOutside;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { validations, getCurrentUrlSearchAsObject, setUrlSearchParam } from \"@rrkallan/js-helpers\";\n\nconst usePagination = (data, itemsPerPage = 10, prefixSearchParam = undefined) => {\n    const [totalItems, setTotalItems] = useState(() => data?.length || 0);\n    const [totalPages, setTotalPages] = useState(() => Math.ceil(totalItems / itemsPerPage));\n    const [currentPage, setCurrentPage] = useState(() => 1);\n    const [endNumber, setEndNumber] = useState(() => Math.min(currentPage * itemsPerPage, totalItems));\n    const [startNumber, setStartNumber] = useState(() => Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1));\n    const [searchParamKeyPage] = useState(() => (prefixSearchParam ? `${prefixSearchParam}Page` : \"page\"));\n\n    const setPaginatorValues = useCallback(\n        ({ page }) => {\n            if (page) {\n                const param = {\n                    [searchParamKeyPage]: page,\n                };\n                setCurrentPage(() => page);\n                setUrlSearchParam(param);\n            }\n        },\n        [searchParamKeyPage]\n    );\n\n    const jump = useCallback(\n        (value) => {\n            const pageNumber = (validations.number(value, true) && parseInt(value, 10)) || undefined;\n            const page = Math.min(Math.max(1, pageNumber), totalPages);\n\n            setPaginatorValues({ page });\n        },\n        [setPaginatorValues, totalPages]\n    );\n\n    const prev = () => {\n        const page = currentPage > 1 ? Math.max(currentPage - 1, 1) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const next = () => {\n        const page = currentPage < totalPages ? currentPage < totalPages && Math.min(currentPage + 1, totalPages) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const first = () => {\n        const page = 1;\n\n        setPaginatorValues({ page });\n    };\n\n    const last = () => {\n        const page = totalPages;\n\n        setPaginatorValues({ page });\n    };\n\n    const currentData = useCallback(() => {\n        const begin = startNumber - 1;\n        const end = endNumber;\n        const tempPageData = data.slice(begin, end);\n        const pageData = tempPageData.map((item, index) => {\n            const tempItem = {\n                ...item,\n                position: startNumber + index,\n            };\n            return tempItem;\n        });\n\n        return pageData;\n    }, [data, endNumber, startNumber]);\n\n    useEffect(() => {\n        if (currentPage) {\n            const end = Math.min(currentPage * itemsPerPage, totalItems);\n            const start = Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1);\n\n            setStartNumber(start);\n            setEndNumber(end);\n        }\n    }, [currentPage, itemsPerPage, totalItems]);\n\n    useEffect(() => {\n        const items = data?.length || 0;\n        const tempTotalPages = Math.ceil(items / itemsPerPage);\n        setCurrentPage((pageNumber) => {\n            return pageNumber > tempTotalPages ? tempTotalPages : pageNumber || 1;\n        });\n        setTotalItems(() => items);\n        setTotalPages(() => tempTotalPages);\n    }, [data, itemsPerPage]);\n\n    useEffect(() => {\n        const currentUrlSearchAsObject = getCurrentUrlSearchAsObject();\n        const page = currentUrlSearchAsObject[searchParamKeyPage];\n\n        if (page) jump(page);\n    }, [jump, searchParamKeyPage]);\n\n    return { next, prev, first, last, jump, currentData, currentPage, totalPages, totalItems, startNumber, endNumber };\n};\n\nexport default usePagination;\n","import { useEffect, useState } from \"react\";\n\nconst getScrollY = () => window.scrollY || document.documentElement.scrollTop || Math.abs(document.body.getBoundingClientRect().top);\nconst getScrollX = () => window.scrollX || document.documentElement.scrollLeft || Math.abs(document.body.getBoundingClientRect().left);\n\ntype TypeUseScrollPosition = {\n    scrollPositionY: number;\n    scrollPositionX: number;\n};\n\nconst useScrollPosition = (): TypeUseScrollPosition => {\n    const [scrollPositionY, setScrollPositionY] = useState(() => getScrollY());\n    const [scrollPositionX, setScrollPositionX] = useState(() => getScrollX());\n\n    useEffect(() => {\n        const updatePosition = () => {\n            setScrollPositionY(window.pageYOffset);\n            setScrollPositionX(window.pageXOffset);\n        };\n\n        window.addEventListener(\"scroll\", updatePosition);\n\n        return () => window.removeEventListener(\"scroll\", updatePosition);\n    }, []);\n\n    return { scrollPositionY, scrollPositionX };\n};\n\nexport default useScrollPosition;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"pagination_container__ljfDz\",\"navigation\":\"pagination_navigation__u2Abt\",\"unit\":\"pagination_unit__9zu1y\",\"button\":\"pagination_button__ldmuC\",\"item\":\"pagination_item__Cu7oq\",\"info\":\"pagination_info__JeXI7\",\"text\":\"pagination_text__N+TUF\"};","import { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { validations, roundDown } from \"@rrkallan/js-helpers\";\nimport { usePagination, useBoundingClientRect } from \"@rrkallan/react-hooks\";\nimport styles from \"./resources/styles/pagination.module.scss\";\n\nfunction Pagination({\n    getPageContent,\n    data = [],\n    prefixSearchParam,\n    itemsPerPage = 16,\n    showing = Pagination.defaultProps.showing,\n    buttonPrevText = Pagination.defaultProps.buttonPrevText,\n    buttonNextText = Pagination.defaultProps.buttonNextText,\n    buttonFirstText = Pagination.defaultProps.buttonFirstText,\n    buttonLastText = Pagination.defaultProps.buttonLastText,\n}) {\n    const paginationNumberRef = useRef();\n    const { width } = useBoundingClientRect({ element: paginationNumberRef, delay: 5, includeUnit: false }) || {};\n    const { totalPages, totalItems, startNumber, endNumber, currentPage, currentData, ...paginated } = usePagination(\n        data,\n        itemsPerPage,\n        prefixSearchParam\n    );\n    const [pages, setPages] = useState(() => (!!totalPages && [...Array(totalPages).keys()].map((page) => page + 1)) || 0);\n    const [showMaxPageLinks, setShowMaxPageLinks] = useState(() => 0);\n    const [beginPageNumber, setBeginPageNumber] = useState(() => 0);\n    const [lastPageNumber, setLastPageNumber] = useState(() => 0);\n    const [charLengthTotalPages] = useState(() => {\n        const charLength = parseFloat(totalItems).toString().length;\n        return charLength < 2 ? 2 : charLength;\n    });\n\n    const onClickHandlerPagination = (event) => {\n        const { value } = event.currentTarget;\n\n        if (validations.number(value, true)) paginated.jump(value);\n\n        if ([\"first\", \"last\", \"next\", \"prev\"].includes(value)) paginated[value]();\n    };\n\n    useLayoutEffect(() => {\n        const possibleMaxPageLinks = roundDown(width / (1 + (charLengthTotalPages + 1) * 0.5)) || 0;\n        const isPossibleMaxPageLinksOdd = !!(possibleMaxPageLinks % 2);\n        const maxPageLinks = possibleMaxPageLinks - !isPossibleMaxPageLinksOdd;\n\n        setShowMaxPageLinks(maxPageLinks);\n    }, [charLengthTotalPages, width]);\n\n    useEffect(() => {\n        setPages(() => (!!totalPages && [...Array(totalPages).keys()].map((page) => page + 1)) || 0);\n    }, [totalPages]);\n\n    useEffect(() => {\n        const divededNumber = roundDown(showMaxPageLinks / 2);\n        let beginNumber = currentPage <= divededNumber ? 1 : currentPage - divededNumber;\n        let lastNumber = currentPage >= totalPages - divededNumber ? totalPages : currentPage + divededNumber;\n\n        if (beginNumber + showMaxPageLinks > totalPages) beginNumber = totalPages - showMaxPageLinks + 1;\n        if (lastNumber < showMaxPageLinks) lastNumber = showMaxPageLinks;\n\n        setBeginPageNumber(beginNumber);\n        setLastPageNumber(lastNumber);\n    }, [currentPage, showMaxPageLinks, totalPages]);\n\n    useEffect(() => {\n        getPageContent(currentData());\n    }, [getPageContent, currentData]);\n\n    if (!totalPages && !pages) return null;\n\n    return (\n        <section className={styles.container}>\n            <nav className={styles.navigation}>\n                {pages?.length > 1 && (\n                    <>\n                        <ul className={styles.unit} variant=\"text\">\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"first\"\n                                    disabled={currentPage === 1 ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to first page\"\n                                >\n                                    {buttonFirstText}\n                                </button>\n                            </li>\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"prev\"\n                                    disabled={currentPage === 1 ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to previous page\"\n                                >\n                                    {buttonPrevText}\n                                </button>\n                            </li>\n                        </ul>\n\n                        <ul\n                            className={styles.unit}\n                            variant={[\"number\", `charLength-${charLengthTotalPages}`].join(\" \")}\n                            ref={paginationNumberRef}\n                        >\n                            {pages.map((page) => {\n                                const itemState =\n                                    (page >= beginPageNumber && page <= lastPageNumber) || pages.length < showMaxPageLinks\n                                        ? \"visible\"\n                                        : \"hidden\";\n\n                                return (\n                                    <li key={page} className={styles.item} state={itemState}>\n                                        <button\n                                            className={styles.button}\n                                            type=\"button\"\n                                            onClick={onClickHandlerPagination}\n                                            value={page}\n                                            state={page === currentPage ? \"is-active\" : undefined}\n                                            disabled={page === currentPage ? \"disabled\" : undefined}\n                                            variant=\"number\"\n                                            title={`Go to page ${page}`}\n                                        >\n                                            {page}\n                                        </button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n\n                        <ul className={styles.unit} variant=\"text\">\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"next\"\n                                    disabled={currentPage === totalPages ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to next page\"\n                                >\n                                    {buttonNextText}\n                                </button>\n                            </li>\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"last\"\n                                    disabled={currentPage === totalPages ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to last page\"\n                                >\n                                    {buttonLastText}\n                                </button>\n                            </li>\n                        </ul>\n                    </>\n                )}\n            </nav>\n\n            <div className={styles.info}>\n                <span className={styles.text}>\n                    {showing\n                        .replace(\"%pagination.from%\", startNumber)\n                        .replace(\"%pagination.to%\", endNumber)\n                        .replace(\"%pagination.total%\", totalItems)}\n                </span>\n            </div>\n        </section>\n    );\n}\n\nPagination.defaultProps = {\n    buttonPrevText: \"Previous\",\n    buttonNextText: \"Next\",\n    buttonLastText: \"Last\",\n    buttonFirstText: \"First\",\n    showing: \"showing %pagination.from% to %pagination.to% of total %pagination.total%\",\n    data: [],\n    itemsPerPage: 16,\n    prefixSearchParam: undefined,\n};\n\nPagination.propTypes = {\n    getPageContent: PropTypes.func.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({})),\n    buttonPrevText: PropTypes.string,\n    buttonNextText: PropTypes.string,\n    buttonLastText: PropTypes.string,\n    buttonFirstText: PropTypes.string,\n    showing: PropTypes.string,\n    itemsPerPage: PropTypes.number,\n    prefixSearchParam: PropTypes.string,\n};\n\nexport default Pagination;\n"],"names":["element","delay","includeUnit","boundingClientRect","setBoundingClientRect","useState","current","getBoundingClientRect","useLayoutEffect","timeoutId","ignore","resizeListener","clearTimeout","setTimeout","value","data","unit","divideValue","Object","fromEntries","Array","from","keys","DOMRect","prototype","key","valueCalculated","convertUnit","window","addEventListener","removeEventListener","debouncedValue","setDebouncedValue","useEffect","handler","itemsPerPage","prefixSearchParam","undefined","totalItems","setTotalItems","length","totalPages","setTotalPages","Math","ceil","currentPage","setCurrentPage","endNumber","setEndNumber","min","startNumber","setStartNumber","max","searchParamKeyPage","setPaginatorValues","useCallback","page","param","setUrlSearchParam","jump","pageNumber","validations","parseInt","prev","next","first","last","currentData","begin","end","slice","map","item","index","position","start","items","tempTotalPages","getCurrentUrlSearchAsObject","scrollPositionY","setScrollPositionY","scrollY","document","documentElement","scrollTop","abs","body","top","scrollPositionX","setScrollPositionX","scrollX","scrollLeft","left","updatePosition","pageYOffset","pageXOffset","Pagination","getPageContent","showing","defaultProps","buttonPrevText","buttonNextText","buttonFirstText","buttonLastText","paginationNumberRef","useRef","width","useBoundingClientRect","paginated","usePagination","pages","setPages","showMaxPageLinks","setShowMaxPageLinks","beginPageNumber","setBeginPageNumber","lastPageNumber","setLastPageNumber","charLengthTotalPages","charLength","parseFloat","toString","onClickHandlerPagination","event","currentTarget","includes","possibleMaxPageLinks","roundDown","divededNumber","beginNumber","lastNumber","className","styles","variant","type","onClick","disabled","title","join","ref","itemState","state","replace"],"sourceRoot":""}