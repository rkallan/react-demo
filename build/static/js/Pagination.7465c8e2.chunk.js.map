{"version":3,"file":"static/js/Pagination.7465c8e2.chunk.js","mappings":"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","sources":["@rrkallan/react-hooks/useDebounce/index.js","@rrkallan/react-hooks/usePagination/index.js","@rrkallan/react-hooks/useBoundingClientRect/index.js","@rrkallan/react-hooks/useScrollPosition/index.tsx","webpack://rrkallan-demo/./src/@rrkallan/ui-library/Pagination/resources/styles/pagination.module.scss?0e83","@rrkallan/ui-library/Pagination/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { validations, getCurrentUrlSearchAsObject, setUrlSearchParam } from \"@rrkallan/js-helpers\";\n\nconst usePagination = (data, itemsPerPage = 10, prefixSearchParam = undefined) => {\n    const [totalItems, setTotalItems] = useState(() => data?.length || 0);\n    const [totalPages, setTotalPages] = useState(() => Math.ceil(totalItems / itemsPerPage));\n    const [currentPage, setCurrentPage] = useState(() => 1);\n    const [endNumber, setEndNumber] = useState(() => Math.min(currentPage * itemsPerPage, totalItems));\n    const [startNumber, setStartNumber] = useState(() => Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1));\n    const [searchParamKeyPage] = useState(() => (prefixSearchParam ? `${prefixSearchParam}Page` : \"page\"));\n\n    const setPaginatorValues = useCallback(\n        ({ page }) => {\n            if (page) {\n                const param = {\n                    [searchParamKeyPage]: page,\n                };\n                setCurrentPage(() => page);\n                setUrlSearchParam(param);\n            }\n        },\n        [searchParamKeyPage]\n    );\n\n    const jump = useCallback(\n        (value) => {\n            const pageNumber = (validations.number(value, true) && parseInt(value, 10)) || undefined;\n            const page = Math.min(Math.max(1, pageNumber), totalPages);\n\n            setPaginatorValues({ page });\n        },\n        [setPaginatorValues, totalPages]\n    );\n\n    const prev = () => {\n        const page = currentPage > 1 ? Math.max(currentPage - 1, 1) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const next = () => {\n        const page = currentPage < totalPages ? currentPage < totalPages && Math.min(currentPage + 1, totalPages) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const first = () => {\n        const page = 1;\n\n        setPaginatorValues({ page });\n    };\n\n    const last = () => {\n        const page = totalPages;\n\n        setPaginatorValues({ page });\n    };\n\n    const currentData = useCallback(() => {\n        const begin = startNumber - 1;\n        const end = endNumber;\n        const tempPageData = data.slice(begin, end);\n        const pageData = tempPageData.map((item, index) => {\n            const tempItem = {\n                ...item,\n                position: startNumber + index,\n            };\n            return tempItem;\n        });\n\n        return pageData;\n    }, [data, endNumber, startNumber]);\n\n    useEffect(() => {\n        if (currentPage) {\n            const end = Math.min(currentPage * itemsPerPage, totalItems);\n            const start = Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1);\n\n            setStartNumber(start);\n            setEndNumber(end);\n        }\n    }, [currentPage, itemsPerPage, totalItems]);\n\n    useEffect(() => {\n        const items = data?.length || 0;\n        const tempTotalPages = Math.ceil(items / itemsPerPage);\n        setCurrentPage((pageNumber) => {\n            return pageNumber > tempTotalPages ? tempTotalPages : pageNumber || 1;\n        });\n        setTotalItems(() => items);\n        setTotalPages(() => tempTotalPages);\n    }, [data, itemsPerPage]);\n\n    useEffect(() => {\n        const currentUrlSearchAsObject = getCurrentUrlSearchAsObject();\n        const page = currentUrlSearchAsObject[searchParamKeyPage];\n\n        if (page) jump(page);\n    }, [jump, searchParamKeyPage]);\n\n    return { next, prev, first, last, jump, currentData, currentPage, totalPages, totalItems, startNumber, endNumber };\n};\n\nexport default usePagination;\n","import { useState, useLayoutEffect } from \"react\";\n\nconst convertUnit = ({ data, unit = \"rem\", includeUnit = true }) => {\n    const divideValue = unit === \"rem\" ? 16 : 1;\n    const newData = Object.fromEntries(\n        Array.from(Object.keys(DOMRect.prototype), (key) => {\n            const valueCalculated = data[key] / divideValue || 0;\n            const value = includeUnit ? `${valueCalculated}${unit}` : valueCalculated;\n\n            return [key, value];\n        })\n    );\n    return newData;\n};\n\nfunction useBoundingClientRect({ element, delay = 100, includeUnit = true }) {\n    const [boundingClientRect, setBoundingClientRect] = useState(() => element?.current?.getBoundingClientRect());\n\n    useLayoutEffect(() => {\n        let timeoutId = null;\n        let ignore = false;\n\n        const resizeListener = () => {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => {\n                const clientRect = element?.current?.getBoundingClientRect() || {};\n                const value = convertUnit({ data: clientRect, includeUnit });\n\n                setBoundingClientRect(value);\n            }, delay);\n        };\n\n        if (!ignore) resizeListener();\n        if (!ignore) window.addEventListener(\"resize\", resizeListener);\n\n        return () => {\n            ignore = true;\n            window.removeEventListener(\"resize\", resizeListener);\n        };\n    }, [delay, element, includeUnit]);\n\n    return boundingClientRect;\n}\n\nexport default useBoundingClientRect;\n","import { useEffect, useState } from \"react\";\n\nconst getScrollY = () => window.scrollY || document.documentElement.scrollTop || Math.abs(document.body.getBoundingClientRect().top);\nconst getScrollX = () => window.scrollX || document.documentElement.scrollLeft || Math.abs(document.body.getBoundingClientRect().left);\n\ntype TypeUseScrollPosition = {\n    scrollPositionY: number;\n    scrollPositionX: number;\n};\n\nconst useScrollPosition = (): TypeUseScrollPosition => {\n    const [scrollPositionY, setScrollPositionY] = useState(() => getScrollY());\n    const [scrollPositionX, setScrollPositionX] = useState(() => getScrollX());\n\n    useEffect(() => {\n        const updatePosition = () => {\n            setScrollPositionY(window.pageYOffset);\n            setScrollPositionX(window.pageXOffset);\n        };\n\n        window.addEventListener(\"scroll\", updatePosition);\n\n        return () => window.removeEventListener(\"scroll\", updatePosition);\n    }, []);\n\n    return { scrollPositionY, scrollPositionX };\n};\n\nexport default useScrollPosition;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"pagination_container__ljfDz\",\"navigation\":\"pagination_navigation__u2Abt\",\"unit\":\"pagination_unit__9zu1y\",\"button\":\"pagination_button__ldmuC\",\"item\":\"pagination_item__Cu7oq\",\"info\":\"pagination_info__JeXI7\",\"text\":\"pagination_text__N+TUF\"};","import { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { validations, roundDown } from \"@rrkallan/js-helpers\";\nimport { usePagination, useBoundingClientRect } from \"@rrkallan/react-hooks\";\nimport styles from \"./resources/styles/pagination.module.scss\";\n\nfunction Pagination({\n    getPageContent,\n    data = [],\n    prefixSearchParam,\n    itemsPerPage = 16,\n    showing = Pagination.defaultProps.showing,\n    buttonPrevText = Pagination.defaultProps.buttonPrevText,\n    buttonNextText = Pagination.defaultProps.buttonNextText,\n    buttonFirstText = Pagination.defaultProps.buttonFirstText,\n    buttonLastText = Pagination.defaultProps.buttonLastText,\n}) {\n    const paginationNumberRef = useRef();\n    const { width } = useBoundingClientRect({ element: paginationNumberRef, delay: 5, includeUnit: false }) || {};\n    const { totalPages, totalItems, startNumber, endNumber, currentPage, currentData, ...paginated } = usePagination(\n        data,\n        itemsPerPage,\n        prefixSearchParam\n    );\n    const [pages, setPages] = useState(() => (!!totalPages && [...Array(totalPages).keys()].map((page) => page + 1)) || 0);\n    const [showMaxPageLinks, setShowMaxPageLinks] = useState(() => 0);\n    const [beginPageNumber, setBeginPageNumber] = useState(() => 0);\n    const [lastPageNumber, setLastPageNumber] = useState(() => 0);\n    const [charLengthTotalPages] = useState(() => {\n        const charLength = parseFloat(totalItems).toString().length;\n        return charLength < 2 ? 2 : charLength;\n    });\n\n    const onClickHandlerPagination = (event) => {\n        const { value } = event.currentTarget;\n\n        if (validations.number(value, true)) paginated.jump(value);\n\n        if ([\"first\", \"last\", \"next\", \"prev\"].includes(value)) paginated[value]();\n    };\n\n    useLayoutEffect(() => {\n        const possibleMaxPageLinks = roundDown(width / (1 + (charLengthTotalPages + 1) * 0.5)) || 0;\n        const isPossibleMaxPageLinksOdd = !!(possibleMaxPageLinks % 2);\n        const maxPageLinks = possibleMaxPageLinks - !isPossibleMaxPageLinksOdd;\n\n        setShowMaxPageLinks(maxPageLinks);\n    }, [charLengthTotalPages, width]);\n\n    useEffect(() => {\n        setPages(() => (!!totalPages && [...Array(totalPages).keys()].map((page) => page + 1)) || 0);\n    }, [totalPages]);\n\n    useEffect(() => {\n        const divededNumber = roundDown(showMaxPageLinks / 2);\n        let beginNumber = currentPage <= divededNumber ? 1 : currentPage - divededNumber;\n        let lastNumber = currentPage >= totalPages - divededNumber ? totalPages : currentPage + divededNumber;\n\n        if (beginNumber + showMaxPageLinks > totalPages) beginNumber = totalPages - showMaxPageLinks + 1;\n        if (lastNumber < showMaxPageLinks) lastNumber = showMaxPageLinks;\n\n        setBeginPageNumber(beginNumber);\n        setLastPageNumber(lastNumber);\n    }, [currentPage, showMaxPageLinks, totalPages]);\n\n    useEffect(() => {\n        getPageContent(currentData());\n    }, [getPageContent, currentData]);\n\n    if (!totalPages && !pages) return null;\n\n    return (\n        <section className={styles.container}>\n            <nav className={styles.navigation}>\n                {pages?.length > 1 && (\n                    <>\n                        <ul className={styles.unit} variant=\"text\">\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"first\"\n                                    disabled={currentPage === 1 ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to first page\"\n                                >\n                                    {buttonFirstText}\n                                </button>\n                            </li>\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"prev\"\n                                    disabled={currentPage === 1 ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to previous page\"\n                                >\n                                    {buttonPrevText}\n                                </button>\n                            </li>\n                        </ul>\n\n                        <ul\n                            className={styles.unit}\n                            variant={[\"number\", `charLength-${charLengthTotalPages}`].join(\" \")}\n                            ref={paginationNumberRef}\n                        >\n                            {pages.map((page) => {\n                                const itemState =\n                                    (page >= beginPageNumber && page <= lastPageNumber) || pages.length < showMaxPageLinks\n                                        ? \"visible\"\n                                        : \"hidden\";\n\n                                return (\n                                    <li key={page} className={styles.item} state={itemState}>\n                                        <button\n                                            className={styles.button}\n                                            type=\"button\"\n                                            onClick={onClickHandlerPagination}\n                                            value={page}\n                                            state={page === currentPage ? \"is-active\" : undefined}\n                                            disabled={page === currentPage ? \"disabled\" : undefined}\n                                            variant=\"number\"\n                                            title={`Go to page ${page}`}\n                                        >\n                                            {page}\n                                        </button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n\n                        <ul className={styles.unit} variant=\"text\">\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"next\"\n                                    disabled={currentPage === totalPages ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to next page\"\n                                >\n                                    {buttonNextText}\n                                </button>\n                            </li>\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"last\"\n                                    disabled={currentPage === totalPages ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to last page\"\n                                >\n                                    {buttonLastText}\n                                </button>\n                            </li>\n                        </ul>\n                    </>\n                )}\n            </nav>\n\n            <div className={styles.info}>\n                <span className={styles.text}>\n                    {showing\n                        .replace(\"%pagination.from%\", startNumber)\n                        .replace(\"%pagination.to%\", endNumber)\n                        .replace(\"%pagination.total%\", totalItems)}\n                </span>\n            </div>\n        </section>\n    );\n}\n\nPagination.defaultProps = {\n    buttonPrevText: \"Previous\",\n    buttonNextText: \"Next\",\n    buttonLastText: \"Last\",\n    buttonFirstText: \"First\",\n    showing: \"showing %pagination.from% to %pagination.to% of total %pagination.total%\",\n    data: [],\n    itemsPerPage: 16,\n    prefixSearchParam: undefined,\n};\n\nPagination.propTypes = {\n    getPageContent: PropTypes.func.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({})),\n    buttonPrevText: PropTypes.string,\n    buttonNextText: PropTypes.string,\n    buttonLastText: PropTypes.string,\n    buttonFirstText: PropTypes.string,\n    showing: PropTypes.string,\n    itemsPerPage: PropTypes.number,\n    prefixSearchParam: PropTypes.string,\n};\n\nexport default Pagination;\n"],"names":["value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","data","itemsPerPage","prefixSearchParam","undefined","length","totalItems","setTotalItems","Math","ceil","totalPages","setTotalPages","currentPage","setCurrentPage","min","endNumber","setEndNumber","max","startNumber","setStartNumber","searchParamKeyPage","setPaginatorValues","useCallback","page","param","setUrlSearchParam","jump","pageNumber","validations","parseInt","prev","next","first","last","currentData","begin","end","slice","map","item","index","position","start","items","tempTotalPages","getCurrentUrlSearchAsObject","element","includeUnit","current","getBoundingClientRect","boundingClientRect","setBoundingClientRect","useLayoutEffect","timeoutId","ignore","resizeListener","unit","divideValue","Object","fromEntries","Array","from","keys","DOMRect","prototype","key","valueCalculated","convertUnit","window","addEventListener","removeEventListener","scrollY","document","documentElement","scrollTop","abs","body","top","scrollPositionY","setScrollPositionY","scrollX","scrollLeft","left","scrollPositionX","setScrollPositionX","updatePosition","pageYOffset","pageXOffset","Pagination","getPageContent","showing","defaultProps","buttonPrevText","buttonNextText","buttonFirstText","buttonLastText","paginationNumberRef","useRef","width","useBoundingClientRect","usePagination","paginated","pages","setPages","showMaxPageLinks","setShowMaxPageLinks","beginPageNumber","setBeginPageNumber","lastPageNumber","setLastPageNumber","charLength","parseFloat","toString","charLengthTotalPages","onClickHandlerPagination","event","currentTarget","includes","possibleMaxPageLinks","roundDown","divededNumber","beginNumber","lastNumber","className","styles","variant","type","onClick","disabled","title","join","ref","itemState","state","replace"],"sourceRoot":""}