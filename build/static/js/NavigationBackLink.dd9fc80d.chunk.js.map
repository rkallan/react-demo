{"version":3,"file":"static/js/NavigationBackLink.dd9fc80d.chunk.js","mappings":"4MACA,EAA4B,sCAA5B,EAAyE,iCAAzE,EAAiH,iC,SCKjH,MAAMA,GAAOC,EAAAA,EAAAA,KAAS,IAAM,uDAAsE,CAC9FC,UAAU,SAAC,KAAD,MAGRC,GAAiBF,EAAAA,EAAAA,KAAS,IAAM,wCAAwF,CAC1HC,UAAU,SAAC,KAAD,MA+Bd,MA5BA,WACI,MAAME,GAAWC,EAAAA,EAAAA,OACVC,IAAkBC,EAAAA,EAAAA,WAAS,KACX,CACfC,QAAS,qBAIVC,EAASC,IAAcH,EAAAA,EAAAA,WAAS,IAAM,MAQ7C,OANAI,EAAAA,EAAAA,YAAU,KACN,MAAM,QAAEC,IAAyB,OAARR,QAAQ,IAARA,OAAA,EAAAA,EAAUS,QAAS,CAAC,EACvCC,EAAU,UAAGF,EAAQG,UAAX,OAAsBH,EAAQI,QAA9B,OAAuCJ,EAAQK,OAAUb,EAASW,SAASG,MAAM,KAAK,IAAM,IAC5GR,GAAW,IAAMI,GAAjB,GACD,CAACV,KAGA,gBAAKe,UAAWC,EAAhB,UACI,UAACjB,EAAD,CAAgBgB,UAAWC,EAAaC,GAAIZ,EAA5C,WACI,SAACT,EAAD,CAAMsB,KAAK,YAAYd,QAAQ,QAAQe,SAAUjB,EAAgBkB,iBAAaC,KAC9E,iBAAMN,UAAWC,EAAaP,MAAM,SAApC,qCAMf,C","sources":["webpack://rrkallan-demo/./src/@rrkallan/ui-library/NavigationBackLink/resources/styles/navigationBackLink.module.scss?2ff2","@rrkallan/ui-library/NavigationBackLink/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"navigationBackLink_container__wktXa\",\"unit\":\"navigationBackLink_unit__zb8Uz\",\"text\":\"navigationBackLink_text__hMyeN\"};","import { useState, useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useLocation } from \"react-router-dom\";\nimport { Loading } from \"@rrkallan/ui-library\";\nimport styles from \"./resources/styles/navigationBackLink.module.scss\";\n\nconst Icon = loadable(() => import(/* webpackChunkName: \"Icons\" */ \"@rrkallan/ui-library/Icons\"), {\n    fallback: <Loading />,\n});\n\nconst NavigationLink = loadable(() => import(/* webpackChunkName: \"NavigationLink\" */ \"@rrkallan/ui-library/NavigationLink\"), {\n    fallback: <Loading />,\n});\n\nfunction NavigationBackLink(): JSX.Element {\n    const location = useLocation();\n    const [iconProperties] = useState(() => {\n        const properties = {\n            variant: \"scroll-to-top\",\n        };\n        return properties;\n    });\n    const [backUrl, setBackUrl] = useState(() => \"/\");\n\n    useEffect(() => {\n        const { referer }: any = location?.state || {};\n        const prevUrl = `${referer.pathname}${referer.search}${referer.hash}` || location.pathname.split(\"/\")[1] || \"/\";\n        setBackUrl(() => prevUrl);\n    }, [location]);\n\n    return (\n        <div className={styles.container}>\n            <NavigationLink className={styles.unit} to={backUrl}>\n                <Icon icon=\"arrowLeft\" variant=\"small\" svgProps={iconProperties} noContainer={undefined} />\n                <span className={styles.text} state=\"hidden\">\n                    Go to previoua page\n                </span>\n            </NavigationLink>\n        </div>\n    );\n}\n\nexport default NavigationBackLink;\n"],"names":["Icon","loadable","fallback","NavigationLink","location","useLocation","iconProperties","useState","variant","backUrl","setBackUrl","useEffect","referer","state","prevUrl","pathname","search","hash","split","className","styles","to","icon","svgProps","noContainer","undefined"],"sourceRoot":""}