{"version":3,"file":"static/js/Notification.13121ca9.chunk.js","mappings":"iMACA,EAA0B,8BAA1B,EAA+E,2CAA/E,EAAmI,6BAAnI,EAAuK,2BAAvK,EAA8M,gCAA9M,EAAqP,2B,SCK/OA,GAAQC,EAAAA,EAAAA,KAAS,kBAAM,wDAAsE,CAC/FC,UAAU,SAAC,KAAD,MAGd,SAASC,EAAT,GAAqI,IAA7GC,EAA4G,EAA5GA,SAAUC,EAAkG,EAAlGA,QAASC,EAAyF,EAAzFA,MAAOC,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,aAAcC,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,gCAK7F,OACI,qBAASC,UAAWC,EAApB,WACI,iBAAKD,UAAWC,EAAkBR,QAASA,EAASC,MAAOA,EAA3D,WACI,gBAAKM,UAAWC,EAAaR,QAAO,eAAUI,GAA9C,UACI,SAACT,EAAD,CAAOQ,KAAMA,EAAMH,QAASE,OAEhC,gBAAKK,UAAWC,EAAaR,QAAQ,UAArC,SACKD,OAGRM,IACG,gBAAKE,UAAWC,EAAhB,UACI,oBAAQD,UAAWC,EAAeC,KAAK,SAASC,QAhB9B,WACmB,cAA7CC,EAAAA,EAAAA,IAAQL,IAAiDA,KAejD,WACI,SAACX,EAAD,CAAOQ,KAAK,QAAQH,QAAQ,gBAC5B,iBAAMO,UAAWC,EAAjB,wCAQxBV,EAAac,aAAe,CACxBZ,QAAS,UACTC,MAAO,SACPE,KAAM,QACND,SAAU,SACVE,aAAc,MACdC,iBAAiB,EACjBC,qCAAiCO,GAcrC","sources":["webpack://rrkallan-demo/./src/@rrkallan/ui-library/Notification/resources/styles/notification.module.scss?43ba","@rrkallan/ui-library/Notification/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"notification_wrapper__tjDqz\",\"closeButtonContainer\":\"notification_closeButtonContainer__JAr7n\",\"button\":\"notification_button__bcpvu\",\"text\":\"notification_text__2JTNX\",\"container\":\"notification_container__q2VNv\",\"unit\":\"notification_unit__s7Gpb\"};","import PropTypes from \"prop-types\";\nimport loadable from \"@loadable/component\";\nimport { Loading } from \"@rrkallan/ui-library\";\nimport { getType } from \"@rrkallan/js-helpers\";\nimport styles from \"./resources/styles/notification.module.scss\";\n\nconst Icons = loadable(() => import(/* webpackChunkName: \"Icons\" */ \"@rrkallan/ui-library/Icons\"), {\n    fallback: <Loading />,\n});\n\nfunction Notification({ children, variant, state, iconSize, icon, iconPosition, showCloseButton, customOnClickHandlerCloseButton }) {\n    const onClickHandlerCloseButton = () => {\n        if (getType(customOnClickHandlerCloseButton) === \"function\") customOnClickHandlerCloseButton();\n    };\n\n    return (\n        <section className={styles.wrapper}>\n            <div className={styles.container} variant={variant} state={state}>\n                <div className={styles.unit} variant={`icon ${iconPosition}`}>\n                    <Icons icon={icon} variant={iconSize} />\n                </div>\n                <div className={styles.unit} variant=\"content\">\n                    {children}\n                </div>\n            </div>\n            {showCloseButton && (\n                <div className={styles.closeButtonContainer}>\n                    <button className={styles.button} type=\"button\" onClick={onClickHandlerCloseButton}>\n                        <Icons icon=\"close\" variant=\"full-width\" />\n                        <span className={styles.text}>close notification</span>\n                    </button>\n                </div>\n            )}\n        </section>\n    );\n}\n\nNotification.defaultProps = {\n    variant: \"default\",\n    state: \"hidden\",\n    icon: \"alert\",\n    iconSize: \"normal\",\n    iconPosition: \"top\",\n    showCloseButton: false,\n    customOnClickHandlerCloseButton: undefined,\n};\n\nNotification.propTypes = {\n    children: PropTypes.node.isRequired,\n    variant: PropTypes.oneOf([\"default\", \"confirm\", \"error\", \"warning\"]),\n    state: PropTypes.oneOf([\"hidden\", \"visible\"]),\n    icon: PropTypes.string,\n    iconSize: PropTypes.oneOf([\"small\", \"normal\", \"large\"]),\n    iconPosition: PropTypes.oneOf([\"top\", \"center\"]),\n    showCloseButton: PropTypes.bool,\n    customOnClickHandlerCloseButton: PropTypes.func,\n};\n\nexport default Notification;\n"],"names":["Icons","loadable","fallback","Notification","children","variant","state","iconSize","icon","iconPosition","showCloseButton","customOnClickHandlerCloseButton","className","styles","type","onClick","getType","defaultProps","undefined"],"sourceRoot":""}