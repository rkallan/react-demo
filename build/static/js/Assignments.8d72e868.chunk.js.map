{"version":3,"file":"static/js/Assignments.8d72e868.chunk.js","mappings":"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","sources":["Store/hooks/index.ts","webpack://rrkallan-demo/./src/features/Clients/Assignments/resources/styles/assignments.module.scss?76ff","features/Clients/Assignments/index.tsx","features/Clients/Assignments/resources/data/clientLayout.tsx","features/Clients/clientsSelector.ts","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { ThunkDispatch, AnyAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppDispatch } from \"Store/types\";\n\nconst useAppDispatch = (): ThunkDispatch<RootState, AppDispatch, AnyAction> => useDispatch();\nconst useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport { useAppDispatch, useAppSelector };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"assignments_container__m6LiM\",\"unit\":\"assignments_unit__JfTKN\",\"item\":\"assignments_item__ZT4WQ\",\"text\":\"assignments_text__Wehq8\",\"link\":\"assignments_link__KiGPr\",\"image\":\"assignments_image__Di02C\",\"readMore\":\"assignments_readMore__85VZo\",\"title\":\"assignments_title__WHf0h\",\"client\":\"assignments_client__+Ccgq\",\"imageContainer\":\"assignments_imageContainer__oAUeJ\",\"list\":\"assignments_list__Zbzzl\",\"listItem\":\"assignments_listItem__Cr2eU\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Link } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\nimport { Loading } from \"@rrkallan/ui-library\";\nimport { getType } from \"@rrkallan/js-helpers\";\nimport { useAppSelector } from \"Store/hooks\";\nimport { getAssignmentsEntities } from \"features/Clients/clientsSelector\";\nimport { InterfaceAssignments } from \"features/Clients/types\";\nimport styles from \"./resources/styles/assignments.module.scss\";\n\nconst Container = loadable(() => import(/* webpackChunkName: \"Container\" */ \"@rrkallan/ui-library/Container\"), {\n    fallback: <Loading />,\n});\n\nconst Quotes = loadable(() => import(/* webpackChunkName: \"Quote\" */ \"features/Clients/Quotes\"), {\n    fallback: <Loading />,\n});\n\nconst NoResult = loadable(() => import(/* webpackChunkName: \"NoResult\" */ \"features/Clients/NoResult\"), {\n    fallback: <Loading />,\n});\n\nconst Icon = loadable(() => import(/* webpackChunkName: \"Icons\" */ \"@rrkallan/ui-library/Icons\"), {\n    fallback: <Loading />,\n});\n\nconst getComponent: any = {\n    quotes: (props: any) => <Quotes {...props} />,\n    noResult: (props: any) => <NoResult {...props} />,\n};\n\nfunction Assignments(): JSX.Element {\n    const assignmentsSplitedByRow = useAppSelector(getAssignmentsEntities);\n\n    return (\n        <Container variant=\"black\" textColor=\"white\" fullWidth>\n            <section className={styles.container}>\n                {!!assignmentsSplitedByRow &&\n                    assignmentsSplitedByRow.map(({ items, layout }: any) => {\n                        if (layout.component) {\n                            if (getType(getComponent[layout.component]) !== \"function\") return null;\n\n                            const Custom = getComponent[layout.component];\n                            return <Custom key={layout.row} />;\n                        }\n\n                        return (\n                            <section key={layout.row} className={styles.unit} variant={layout.deviding.split(\"=\")[0]}>\n                                {!!items &&\n                                    items?.map((assignment: InterfaceAssignments | any) => {\n                                        const assigmentType = getType(assignment);\n\n                                        if (assigmentType === \"object\") {\n                                            const titleForUrl = assignment.title.trim().replace(/\\s+/g, \"-\").toLowerCase();\n                                            const url = `/work/${assignment.id}/${titleForUrl}`;\n                                            const variant = [\"single\", !assignment.mainImage ? \"no-image\" : \"has-image\"];\n\n                                            return (\n                                                <article key={assignment.id} className={styles.item} variant={variant.join(\" \")}>\n                                                    <Link className={styles.link} to={url}>\n                                                        <div className={styles.text}>\n                                                            <span className={styles.client}>{assignment.client}</span>\n                                                            <h2 className={styles.title}>{assignment.title}</h2>\n                                                            <span className={styles.readMore}>\n                                                                <Icon\n                                                                    icon=\"circle\"\n                                                                    variant=\"small\"\n                                                                    svgProps={undefined}\n                                                                    noContainer={undefined}\n                                                                />\n                                                                Read more\n                                                            </span>\n                                                        </div>\n                                                        {!!assignment.mainImage && (\n                                                            <figure className={styles.imageContainer}>\n                                                                <img\n                                                                    className={styles.image}\n                                                                    src={assignment.mainImage}\n                                                                    alt={assignment.title}\n                                                                />\n                                                            </figure>\n                                                        )}\n                                                    </Link>\n                                                </article>\n                                            );\n                                        }\n\n                                        if (assigmentType === \"array\") {\n                                            return (\n                                                <article key={layout.row} className={styles.item} variant=\"list\">\n                                                    <ul className={styles.list}>\n                                                        {assignment.map((item: any) => {\n                                                            const titleForUrl = item.title.trim().replace(/\\s+/g, \"-\").toLowerCase();\n                                                            const url = `/work/${item.id}/${titleForUrl}`;\n\n                                                            return (\n                                                                <li key={item.id} className={styles.listItem}>\n                                                                    <Link className={styles.link} to={url}>\n                                                                        <span className={styles.client}>{item.client}</span>\n                                                                        <h2 className={styles.title}>{item.title}</h2>\n                                                                        <span className={styles.readMore}>\n                                                                            <Icon\n                                                                                icon=\"circle\"\n                                                                                variant=\"small\"\n                                                                                svgProps={undefined}\n                                                                                noContainer={undefined}\n                                                                            />\n                                                                            Read more\n                                                                        </span>\n                                                                    </Link>\n                                                                </li>\n                                                            );\n                                                        })}\n                                                    </ul>\n                                                </article>\n                                            );\n                                        }\n\n                                        return null;\n                                    })}\n                            </section>\n                        );\n                    })}\n            </section>\n        </Container>\n    );\n}\n\nexport default Assignments;\n","const clientLayout = [\n    {\n        row: 1,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 2,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 3,\n        items: 4,\n        deviding: \"list=2,3,4\",\n    },\n    {\n        row: 4,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 5,\n        items: 4,\n        deviding: \"list=1,2,3\",\n    },\n    {\n        row: 6,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 7,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 8,\n        items: 0,\n        component: \"quotes\",\n        deviding: undefined,\n    },\n    {\n        row: 9,\n        items: 2,\n        deviding: \"equal\",\n    },\n];\n\nexport default clientLayout;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"Store/types\";\nimport { validations } from \"@rrkallan/js-helpers\";\nimport clientLayout from \"./Assignments/resources/data/clientLayout\";\nimport type { InterfaceClientsState, TypeRowLayout, TypeEntitiesSelector } from \"./types\";\n\nconst clientsState = ({ clients }: RootState): InterfaceClientsState => clients;\n\nconst getAssignmentsError = createSelector(clientsState, ({ assignments }) => assignments.error);\nconst getAssignmentsLoading = createSelector(clientsState, ({ assignments }) => assignments.loading);\nconst assignmentsIsLoaded = createSelector(clientsState, ({ assignments }) => {\n    const { loading, entities, error } = assignments;\n    const isLoaded = (!loading && !!entities) || !!error;\n    return isLoaded;\n});\n\nconst getAssignmentsEntities = createSelector(clientsState, ({ assignments }) => {\n    const { entities, filter } = assignments || {};\n    if (validations.isEmpty(entities)) return [];\n    const filterKeys = Object.entries(filter || {});\n\n    const entitiesFiltered =\n        (filterKeys.length > 0 &&\n            entities?.reduce((previousValue, currentValue: any): any => {\n                const tempResult: any = previousValue;\n\n                let isFilterValues = true;\n                filterKeys.forEach(([key, value]: any) => {\n                    if (isFilterValues && value !== undefined) isFilterValues = currentValue?.[key] === value;\n                });\n\n                if (isFilterValues) tempResult.push(currentValue);\n\n                return tempResult;\n            }, [])) ||\n        entities;\n\n    const entitiesSplittedByRow = clientLayout.reduce(\n        (previousValue: any, currentValue): TypeEntitiesSelector => {\n            const { result, startWith } = previousValue;\n            const { items, row, component, deviding }: TypeRowLayout = currentValue;\n            const tempResult = result;\n            const endWidth = startWith + items;\n            const itemsForRow = entitiesFiltered?.slice(startWith, endWidth) || [];\n            const isListView = deviding?.startsWith(\"list\");\n\n            if (validations.isEmpty(itemsForRow) && validations.isEmpty(component))\n                return {\n                    result: tempResult,\n                    startWith: endWidth,\n                };\n\n            const block: any = [[], []];\n            if (isListView && validations.isEmpty(component)) {\n                const keysAsList =\n                    deviding\n                        ?.split(\"=\")[1]\n                        .split(\",\")\n                        .map((key) => Number(key) - 1) || [];\n\n                const listIsBlock = Number(keysAsList[0] === 0);\n\n                itemsForRow.forEach((item, key) => {\n                    if (keysAsList?.includes(key)) block[listIsBlock].push(item);\n                    if (!keysAsList?.includes(key)) block[Number(!listIsBlock)] = item;\n                });\n            }\n\n            const resultForRow = {\n                items: isListView ? block : itemsForRow,\n                layout: {\n                    items,\n                    row,\n                    component,\n                    deviding,\n                },\n            };\n            tempResult.push(resultForRow);\n\n            const newValue = {\n                result: tempResult,\n                startWith: endWidth,\n            };\n\n            return newValue;\n        },\n        { result: [], startWith: 0 }\n    );\n\n    if (entitiesFiltered?.length === 0) {\n        const error = {\n            items: 0,\n            layout: {\n                items: 0,\n                row: 1,\n                component: \"noResult\",\n                deviding: \"full\",\n            },\n        };\n        entitiesSplittedByRow.result.unshift(error);\n    }\n\n    return entitiesSplittedByRow.result;\n});\n\nconst getAssignmentById = createSelector([clientsState, (_, data) => data], ({ assignments }, data) => {\n    const { id } = data || {};\n    const { ids } = assignments || {};\n    const assignment = ids?.[id];\n\n    return assignment || {};\n});\n\nconst getQuotesError = createSelector(clientsState, ({ quotes }) => quotes.error);\nconst getQuotesLoading = createSelector(clientsState, ({ quotes }) => quotes.loading);\nconst getQuotesIsLoaded = createSelector(clientsState, ({ quotes }) => {\n    const { loading, entities, error } = quotes;\n    const isLoaded = (!loading && !!entities) || !!error;\n    return isLoaded;\n});\nconst getQuotes = createSelector(clientsState, ({ quotes }) => quotes.entities);\nconst getQuote = createSelector(clientsState, ({ quotes }) => {\n    const { entities } = quotes || {};\n    const length = entities?.length || 0;\n    const key = length - 1;\n\n    return entities?.[key];\n});\n\nexport {\n    getAssignmentsLoading,\n    getAssignmentsError,\n    getAssignmentsEntities,\n    assignmentsIsLoaded,\n    getAssignmentById,\n    getQuotesError,\n    getQuotesIsLoaded,\n    getQuotesLoading,\n    getQuotes,\n    getQuote,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Container","loadable","fallback","Quotes","NoResult","Icon","getComponent","quotes","props","noResult","assignmentsSplitedByRow","getAssignmentsEntities","variant","textColor","fullWidth","className","styles","map","items","layout","component","getType","Custom","row","deviding","split","assignment","assigmentType","titleForUrl","title","trim","replace","toLowerCase","url","id","mainImage","join","to","client","icon","svgProps","undefined","noContainer","src","alt","item","clientsState","clients","assignmentsIsLoaded","createSelector","assignments","error","loading","entities","filter","validations","filterKeys","Object","entries","entitiesFiltered","length","reduce","previousValue","currentValue","tempResult","isFilterValues","forEach","key","value","push","entitiesSplittedByRow","clientLayout","result","startWith","endWidth","itemsForRow","slice","isListView","startsWith","block","keysAsList","Number","listIsBlock","includes","resultForRow","unshift","getAssignmentById","_","data","ids","getQuotesIsLoaded","getQuote","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","put","getEntries","clear","createSingletonCache","cacheIndex","findIndex","splice","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}