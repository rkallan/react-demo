{"version":3,"file":"static/js/Quote.88b301eb.chunk.js","mappings":"gOACA,EAA4B,yBAA5B,EAA4D,oB,SCO5D,MAAMA,GAAYC,EAAAA,EAAAA,KAAS,IAAM,uCAA8E,CAC3GC,UAAU,SAAC,KAAD,MAiCd,MA9BA,WAAgC,IAAD,MAC3B,MAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,GAAeC,EAAAA,IAC1BC,GAAQF,EAAAA,EAAAA,GAAeG,EAAAA,IAM7B,OAJAC,EAAAA,EAAAA,YAAU,KACDL,GAAUF,GAASQ,EAAAA,EAAAA,IAAmB,CAAEC,IAAK,WAAnC,GAChB,CAACT,EAAUE,KAGV,UAACL,EAAD,CACIa,oBAAoB,UACpBC,eAAe,UACfC,cAAeC,EACfC,QAAQ,QACRC,UAAU,QACVC,WAAS,EANb,WAQI,cAAGC,UAAWJ,EAAd,UACI,cAAGI,UAAWJ,EAAd,gBAA2BR,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOa,UAEtC,cAAGD,UAAWJ,EAAd,UACI,mCACKR,QADL,IACKA,GADL,UACKA,EAAOc,cADZ,aACK,EAAeC,KADpB,aAC6Bf,QAD7B,IAC6BA,GAD7B,UAC6BA,EAAOc,cADpC,aAC6B,EAAeE,SAD5C,YACwDhB,QADxD,IACwDA,GADxD,UACwDA,EAAOc,cAD/D,aACwD,EAAeG,cAKtF,C","sources":["webpack://rrkallan-demo/./src/features/Clients/Quotes/resources/styles/quote.module.scss?0861","features/Clients/Quotes/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"quote_container__UGXuB\",\"unit\":\"quote_unit__nxI34\"};","import { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useAppDispatch, useAppSelector } from \"Store/hooks\";\nimport { Loading } from \"@rrkallan/ui-library\";\nimport { fetchClientsQuotes } from \"features/Clients/clientsSlice\";\nimport { getQuotesIsLoaded, getQuote } from \"features/Clients/clientsSelector\";\nimport style from \"./resources/styles/quote.module.scss\";\n\nconst Container = loadable(() => import(/* webpackChunkName: \"Container\" */ \"@rrkallan/ui-library/Container\"), {\n    fallback: <Loading />,\n});\n\nfunction Quotes(): JSX.Element {\n    const dispatch = useAppDispatch();\n    const isLoaded = useAppSelector(getQuotesIsLoaded);\n    const quote = useAppSelector(getQuote);\n\n    useEffect(() => {\n        if (!isLoaded) dispatch(fetchClientsQuotes({ key: \"quotes\" }));\n    }, [dispatch, isLoaded]);\n\n    return (\n        <Container\n            containerElementTag=\"section\"\n            unitElementTag=\"article\"\n            classNameUnit={style.container}\n            variant=\"black\"\n            textColor=\"white\"\n            fullWidth\n        >\n            <p className={style.unit}>\n                <q className={style.unit}>{quote?.text}</q>\n            </p>\n            <p className={style.unit}>\n                <span>\n                    {quote?.person?.name} - {quote?.person?.function}, {quote?.person?.client}\n                </span>\n            </p>\n        </Container>\n    );\n}\n\nexport default Quotes;\n"],"names":["Container","loadable","fallback","dispatch","useAppDispatch","isLoaded","useAppSelector","getQuotesIsLoaded","quote","getQuote","useEffect","fetchClientsQuotes","key","containerElementTag","unitElementTag","classNameUnit","style","variant","textColor","fullWidth","className","text","person","name","function","client"],"sourceRoot":""}