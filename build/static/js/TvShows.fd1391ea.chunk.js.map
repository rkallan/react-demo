{"version":3,"file":"static/js/TvShows.fd1391ea.chunk.js","mappings":"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","sources":["Store/hooks/index.ts","features/TvShows/tvShowsSelector.ts","webpack://rrkallan-demo/./src/pages/TvShows/resources/styles/tvShows.module.scss?aa2c","pages/TvShows/index.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { ThunkDispatch, AnyAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppDispatch } from \"Store/types\";\n\nconst useAppDispatch = (): ThunkDispatch<RootState, AppDispatch, AnyAction> => useDispatch();\nconst useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport { useAppDispatch, useAppSelector };\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"Store/types\";\nimport type { InterfaceTvShowsState } from \"./types\";\n\nconst getTvShowsState = ({ tvShows }: RootState): InterfaceTvShowsState => tvShows;\n\nconst getTvShowsList = createSelector(getTvShowsState, (tvShows) => {\n    const stateShowKey = tvShows.search?.value ? \"search\" : \"overview\";\n\n    return tvShows[stateShowKey].entities || [];\n});\n\nconst getTvShowsListLength = createSelector(getTvShowsState, (tvShows) => {\n    const stateShowKey = tvShows.search?.value ? \"search\" : \"overview\";\n\n    if (tvShows[stateShowKey].entities?.length === 0 || tvShows[stateShowKey].entities?.length) return true;\n\n    return undefined;\n});\n\nconst getTvShowsLoading = createSelector(getTvShowsState, (tvShows) => {\n    const isLoadingSearchResult = !!tvShows.search.value;\n    const stateShowKey = isLoadingSearchResult ? \"search\" : \"overview\";\n\n    return tvShows[stateShowKey].loading;\n});\nconst getTvShowsError = createSelector(getTvShowsState, (tvShows) => {\n    const stateShowKey = tvShows.search.value ? \"search\" : \"overview\";\n\n    return tvShows[stateShowKey].error;\n});\n\nconst getTvShowsSearchValue = createSelector(getTvShowsState, (tvShows) => tvShows.search.value);\n\nconst selectTvShowById = createSelector([getTvShowsState, (_, data) => data], (shows, data) => {\n    const { entities } = shows.items || {};\n    const { id } = data || {};\n    const showById = entities?.[id] || undefined;\n\n    return showById;\n});\n\nconst selectTvShowError = createSelector(getTvShowsState, ({ items }) => items.error);\nconst selectTvShowLoading = createSelector(getTvShowsState, ({ items }) => items.loading);\n\nconst selectLastUpdatedOnServerByShowId = createSelector([getTvShowsState, (_, data) => data], (shows, data) => {\n    const { entities } = shows.lastUpdated || {};\n    const { id } = data || {};\n    const lastUpdated = entities?.[id] || undefined;\n\n    return lastUpdated;\n});\n\nconst getIsLastUpdatedLoaded = createSelector(getTvShowsState, ({ lastUpdated }) => lastUpdated.loading === \"fulfilled\");\nconst getLastUpdatedLoading = createSelector(getTvShowsState, ({ lastUpdated }) => lastUpdated.loading);\nconst getLastUpdatedError = createSelector(getTvShowsState, ({ lastUpdated }) => lastUpdated.loading === \"rejected\" && lastUpdated.error);\nconst getLastFetchedTime = createSelector(getTvShowsState, ({ lastUpdated }) => lastUpdated.lastFetchedTime);\n\nexport {\n    getTvShowsState,\n    getTvShowsList,\n    getTvShowsListLength,\n    getTvShowsLoading,\n    getTvShowsError,\n    getTvShowsSearchValue,\n    getIsLastUpdatedLoaded,\n    getLastUpdatedLoading,\n    getLastUpdatedError,\n    getLastFetchedTime,\n    selectTvShowById,\n    selectTvShowError,\n    selectTvShowLoading,\n    selectLastUpdatedOnServerByShowId,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tvShows_container__YtxWG\"};","import { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useAppDispatch, useAppSelector } from \"Store/hooks\";\nimport { Loading } from \"@rrkallan/ui-library\";\nimport { fetchTvShowsLastUpdated } from \"features/TvShows/tvShowsSlice\";\nimport { getIsLastUpdatedLoaded, getLastFetchedTime, getLastUpdatedError } from \"features/TvShows/tvShowsSelector\";\nimport { getDayDifference } from \"@rrkallan/js-helpers\";\nimport styles from \"./resources/styles/tvShows.module.scss\";\n\nconst SubRoutes = loadable(() => import(/* webpackChunkName: \"SubRoutes\" */ \"Routes/SubRoutes\"), {\n    fallback: <Loading />,\n});\n\nconst Notification = loadable(() => import(/* webpackChunkName: \"Notification\" */ \"@rrkallan/ui-library/Notification\"), {\n    fallback: <Loading />,\n});\n\nconst getUrlParam = ({ dayDifference }: { dayDifference: number }) => {\n    const urlParam = {\n        since:\n            (dayDifference === -1 && undefined) ||\n            ((dayDifference === 0 || !dayDifference) && undefined) ||\n            (dayDifference === 1 && \"day\") ||\n            (dayDifference > 1 && dayDifference < 8 && \"week\") ||\n            (dayDifference > 7 && dayDifference < 30 && \"month\") ||\n            (dayDifference > 29 && undefined) ||\n            (!dayDifference && undefined) ||\n            undefined,\n    };\n\n    return urlParam;\n};\n\nfunction TvShows(): JSX.Element {\n    const dispatch = useAppDispatch();\n    const lastUpdatedLoaded = useAppSelector(getIsLastUpdatedLoaded);\n    const lastFetchedTime = useAppSelector(getLastFetchedTime);\n    const errors = useAppSelector(getLastUpdatedError);\n\n    useEffect(() => {\n        const dayDifference = getDayDifference(lastFetchedTime) ?? -1;\n        const urlParam = getUrlParam({ dayDifference });\n\n        if (!lastUpdatedLoaded || dayDifference) {\n            dispatch(fetchTvShowsLastUpdated({ urlParam }));\n        }\n    }, [dispatch, lastFetchedTime, lastUpdatedLoaded]);\n\n    if (errors)\n        return (\n            <section className={styles.container}>\n                <Notification\n                    variant=\"error\"\n                    state={errors ? \"visible\" : \"hidden\"}\n                    iconSize=\"normal\"\n                    icon={undefined}\n                    iconPosition=\"center\"\n                    showCloseButton={false}\n                    customOnClickHandlerCloseButton={undefined}\n                >\n                    <ul>\n                        {!!errors.length &&\n                            errors.map((error, index) => {\n                                const key = index;\n                                return <li key={key}>{error}</li>;\n                            })}\n                    </ul>\n                </Notification>\n            </section>\n        );\n\n    return <SubRoutes />;\n}\n\nexport default TvShows;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","getTvShowsState","tvShows","getTvShowsList","createSelector","search","value","entities","getTvShowsListLength","stateShowKey","length","getTvShowsLoading","loading","getTvShowsError","error","getTvShowsSearchValue","selectTvShowById","_","data","shows","items","id","undefined","selectLastUpdatedOnServerByShowId","lastUpdated","getIsLastUpdatedLoaded","getLastUpdatedError","getLastFetchedTime","lastFetchedTime","SubRoutes","loadable","fallback","Notification","dispatch","lastUpdatedLoaded","errors","useEffect","dayDifference","getDayDifference","urlParam","since","getUrlParam","fetchTvShowsLastUpdated","className","styles","variant","state","iconSize","icon","iconPosition","showCloseButton","customOnClickHandlerCloseButton","map","index","key","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}