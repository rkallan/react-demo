{"version":3,"file":"static/js/SearchFornm.c9774736.chunk.js","mappings":"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","sources":["@rrkallan/react-hooks/useDebounce/index.js","@rrkallan/react-hooks/usePagination/index.js","@rrkallan/react-hooks/useBoundingClientRect/index.js","@rrkallan/react-hooks/useScrollPosition/index.tsx","pages/TvShows/SearchForm/constants/searchForm.js","pages/TvShows/SearchForm/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { validations, getCurrentUrlSearchAsObject, setUrlSearchParam } from \"@rrkallan/js-helpers\";\n\nconst usePagination = (data, itemsPerPage = 10, prefixSearchParam = undefined) => {\n    const [totalItems, setTotalItems] = useState(() => data?.length || 0);\n    const [totalPages, setTotalPages] = useState(() => Math.ceil(totalItems / itemsPerPage));\n    const [currentPage, setCurrentPage] = useState(() => 1);\n    const [endNumber, setEndNumber] = useState(() => Math.min(currentPage * itemsPerPage, totalItems));\n    const [startNumber, setStartNumber] = useState(() => Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1));\n    const [searchParamKeyPage] = useState(() => (prefixSearchParam ? `${prefixSearchParam}Page` : \"page\"));\n\n    const setPaginatorValues = useCallback(\n        ({ page }) => {\n            if (page) {\n                const param = {\n                    [searchParamKeyPage]: page,\n                };\n                setCurrentPage(() => page);\n                setUrlSearchParam(param);\n            }\n        },\n        [searchParamKeyPage]\n    );\n\n    const jump = useCallback(\n        (value) => {\n            const pageNumber = (validations.number(value, true) && parseInt(value, 10)) || undefined;\n            const page = Math.min(Math.max(1, pageNumber), totalPages);\n\n            setPaginatorValues({ page });\n        },\n        [setPaginatorValues, totalPages]\n    );\n\n    const prev = () => {\n        const page = currentPage > 1 ? Math.max(currentPage - 1, 1) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const next = () => {\n        const page = currentPage < totalPages ? currentPage < totalPages && Math.min(currentPage + 1, totalPages) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const first = () => {\n        const page = 1;\n\n        setPaginatorValues({ page });\n    };\n\n    const last = () => {\n        const page = totalPages;\n\n        setPaginatorValues({ page });\n    };\n\n    const currentData = useCallback(() => {\n        const begin = startNumber - 1;\n        const end = endNumber;\n        const tempPageData = data.slice(begin, end);\n        const pageData = tempPageData.map((item, index) => {\n            const tempItem = {\n                ...item,\n                position: startNumber + index,\n            };\n            return tempItem;\n        });\n\n        return pageData;\n    }, [data, endNumber, startNumber]);\n\n    useEffect(() => {\n        if (currentPage) {\n            const end = Math.min(currentPage * itemsPerPage, totalItems);\n            const start = Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1);\n\n            setStartNumber(start);\n            setEndNumber(end);\n        }\n    }, [currentPage, itemsPerPage, totalItems]);\n\n    useEffect(() => {\n        const items = data?.length || 0;\n        const tempTotalPages = Math.ceil(items / itemsPerPage);\n        setCurrentPage((pageNumber) => {\n            return pageNumber > tempTotalPages ? tempTotalPages : pageNumber || 1;\n        });\n        setTotalItems(() => items);\n        setTotalPages(() => tempTotalPages);\n    }, [data, itemsPerPage]);\n\n    useEffect(() => {\n        const currentUrlSearchAsObject = getCurrentUrlSearchAsObject();\n        const page = currentUrlSearchAsObject[searchParamKeyPage];\n\n        if (page) jump(page);\n    }, [jump, searchParamKeyPage]);\n\n    return { next, prev, first, last, jump, currentData, currentPage, totalPages, totalItems, startNumber, endNumber };\n};\n\nexport default usePagination;\n","import { useState, useLayoutEffect } from \"react\";\n\nconst convertUnit = ({ data, unit = \"rem\", includeUnit = true }) => {\n    const divideValue = unit === \"rem\" ? 16 : 1;\n    const newData = Object.fromEntries(\n        Array.from(Object.keys(DOMRect.prototype), (key) => {\n            const valueCalculated = data[key] / divideValue || 0;\n            const value = includeUnit ? `${valueCalculated}${unit}` : valueCalculated;\n\n            return [key, value];\n        })\n    );\n    return newData;\n};\n\nfunction useBoundingClientRect({ element, delay = 100, includeUnit = true }) {\n    const [boundingClientRect, setBoundingClientRect] = useState(() => element?.current?.getBoundingClientRect());\n\n    useLayoutEffect(() => {\n        let timeoutId = null;\n        let ignore = false;\n\n        const resizeListener = () => {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => {\n                const clientRect = element?.current?.getBoundingClientRect() || {};\n                const value = convertUnit({ data: clientRect, includeUnit });\n\n                setBoundingClientRect(value);\n            }, delay);\n        };\n\n        if (!ignore) resizeListener();\n        if (!ignore) window.addEventListener(\"resize\", resizeListener);\n\n        return () => {\n            ignore = true;\n            window.removeEventListener(\"resize\", resizeListener);\n        };\n    }, [delay, element, includeUnit]);\n\n    return boundingClientRect;\n}\n\nexport default useBoundingClientRect;\n","import { useEffect, useState } from \"react\";\n\nconst getScrollY = () => window.scrollY || document.documentElement.scrollTop || Math.abs(document.body.getBoundingClientRect().top);\nconst getScrollX = () => window.scrollX || document.documentElement.scrollLeft || Math.abs(document.body.getBoundingClientRect().left);\n\ntype TypeUseScrollPosition = {\n    scrollPositionY: number;\n    scrollPositionX: number;\n};\n\nconst useScrollPosition = (): TypeUseScrollPosition => {\n    const [scrollPositionY, setScrollPositionY] = useState(() => getScrollY());\n    const [scrollPositionX, setScrollPositionX] = useState(() => getScrollX());\n\n    useEffect(() => {\n        const updatePosition = () => {\n            setScrollPositionY(window.pageYOffset);\n            setScrollPositionX(window.pageXOffset);\n        };\n\n        window.addEventListener(\"scroll\", updatePosition);\n\n        return () => window.removeEventListener(\"scroll\", updatePosition);\n    }, []);\n\n    return { scrollPositionY, scrollPositionX };\n};\n\nexport default useScrollPosition;\n","import { store } from \"Store\";\n\nconst unsubscribe = store.subscribe(() => {});\n\nstore.subscribe(() => {});\n\nconst searchForm = () => {\n    const { tvShows } = store.getState();\n    const { search } = tvShows;\n    return {\n        attributes: {\n            method: \"get\",\n            name: \"search-tv-shows-form\",\n            autoComplete: \"off\",\n            \"data-required\": true,\n            action: process.env.REACT_APP_API_SHOWS_SEARCH,\n            noValidate: true,\n        },\n        fieldsets: [\n            {\n                id: 1,\n                caption: null,\n                disabled: false,\n                form: null,\n                name: null,\n                elements: [\n                    {\n                        id: 1,\n                        name: \"q\",\n                        title: \"Search tv shows by title\",\n                        type: \"search\",\n                        validationTypes: {\n                            hasMinimalAndMaximalCharacters: { minCharacters: 2, maxCharacters: 256 },\n                        },\n                        defaultValue: search.value || undefined,\n                        disabled: false,\n                        node: \"input\",\n                    },\n                ],\n            },\n        ],\n        test: store.getState(),\n    };\n};\n\nexport default searchForm;\n\nexport { unsubscribe };\n","import { useEffect, useState, ChangeEvent } from \"react\";\nimport loadable from \"@loadable/component\";\nimport Loading from \"@rrkallan/ui-library/Loading\";\nimport { objectAsUrlParams, urlParamsAsObject, validations } from \"@rrkallan/js-helpers\";\nimport { useDebounce } from \"@rrkallan/react-hooks\";\nimport { useAppDispatch } from \"Store/hooks\";\nimport { setSearchValue } from \"features/TvShows/tvShowsSlice\";\nimport formData from \"./constants/searchForm\";\n\nconst Form = loadable(() => import(/* webpackChunkName: \"LoginForm\" */ \"@rrkallan/ui-library/Form\"), {\n    fallback: <Loading />,\n});\n\nfunction SearchFornm(): JSX.Element {\n    const dispatch = useAppDispatch();\n    const searchFormData = formData();\n    const [currentValue, setCurrentValue] = useState((): string | undefined => undefined);\n    const debouncedCurrentValue = useDebounce(currentValue, 500);\n\n    const formOnChangeHandler = async (event: ChangeEvent<HTMLFormElement>) => {\n        const element = event.target;\n        const { name, value } = element || {};\n\n        setCurrentValue(`${name}:${value.trim()}`);\n    };\n\n    useEffect(() => {\n        if (debouncedCurrentValue || validations.isEmpty(debouncedCurrentValue)) {\n            const currentUrlSearch = window.location.search;\n            const currentUrlSearchAsObject = urlParamsAsObject(currentUrlSearch);\n            const [key, value] = debouncedCurrentValue?.split(\":\") || [];\n\n            const searchObject = {\n                ...currentUrlSearchAsObject,\n                [key]: value ?? currentUrlSearchAsObject[key],\n            };\n            const search = objectAsUrlParams(searchObject);\n            const isSearchCurrentUrlSearch = search === currentUrlSearch;\n\n            const payloadValue = {\n                searchValue: searchObject.q,\n            };\n\n            dispatch(setSearchValue(payloadValue));\n\n            if (!isSearchCurrentUrlSearch) window.history.pushState({}, \"\", !search ? window.location.pathname : search);\n        }\n    }, [debouncedCurrentValue, dispatch]);\n\n    return (\n        <Form\n            customEventHandler={formOnChangeHandler}\n            customSubmitHandler={undefined}\n            disableForm={undefined}\n            resetForm={undefined}\n            submitButtonDisabled={undefined}\n            {...searchFormData}\n            postFormWithApiCall\n            postData={undefined}\n        />\n    );\n}\n\nexport default SearchFornm;\n"],"names":["value","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","setTimeout","clearTimeout","data","itemsPerPage","prefixSearchParam","undefined","totalItems","setTotalItems","length","totalPages","setTotalPages","Math","ceil","currentPage","setCurrentPage","endNumber","setEndNumber","min","startNumber","setStartNumber","max","searchParamKeyPage","setPaginatorValues","useCallback","page","param","setUrlSearchParam","jump","pageNumber","validations","parseInt","prev","next","first","last","currentData","begin","end","slice","map","item","index","position","start","items","tempTotalPages","getCurrentUrlSearchAsObject","element","includeUnit","boundingClientRect","setBoundingClientRect","current","getBoundingClientRect","useLayoutEffect","timeoutId","ignore","resizeListener","unit","divideValue","Object","fromEntries","Array","from","keys","DOMRect","prototype","key","valueCalculated","convertUnit","window","addEventListener","removeEventListener","scrollPositionY","setScrollPositionY","scrollY","document","documentElement","scrollTop","abs","body","top","scrollPositionX","setScrollPositionX","scrollX","scrollLeft","left","updatePosition","pageYOffset","pageXOffset","store","tvShows","search","attributes","method","name","autoComplete","action","process","noValidate","fieldsets","id","caption","disabled","form","elements","title","type","validationTypes","hasMinimalAndMaximalCharacters","minCharacters","maxCharacters","defaultValue","node","test","Form","loadable","fallback","Loading","dispatch","useAppDispatch","searchFormData","formData","currentValue","setCurrentValue","debouncedCurrentValue","useDebounce","currentUrlSearch","location","currentUrlSearchAsObject","urlParamsAsObject","split","searchObject","objectAsUrlParams","isSearchCurrentUrlSearch","payloadValue","searchValue","q","setSearchValue","history","pushState","pathname","customEventHandler","async","event","target","trim","customSubmitHandler","disableForm","resetForm","submitButtonDisabled","postFormWithApiCall","postData"],"sourceRoot":""}