{"version":3,"file":"static/js/LoginForm.83ed7772.chunk.js","mappings":"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","sources":["@rrkallan/react-hooks/useDebounce/index.js","@rrkallan/react-hooks/usePagination/index.js","@rrkallan/react-hooks/useBoundingClientRect/index.js","@rrkallan/react-hooks/useScrollPosition/index.tsx","webpack://rrkallan-demo/./src/@rrkallan/ui-library/Form/resources/styles/form.module.scss?5edc","@rrkallan/ui-library/Form/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { validations, getCurrentUrlSearchAsObject, setUrlSearchParam } from \"@rrkallan/js-helpers\";\n\nconst usePagination = (data, itemsPerPage = 10, prefixSearchParam = undefined) => {\n    const [totalItems, setTotalItems] = useState(() => data?.length || 0);\n    const [totalPages, setTotalPages] = useState(() => Math.ceil(totalItems / itemsPerPage));\n    const [currentPage, setCurrentPage] = useState(() => 1);\n    const [endNumber, setEndNumber] = useState(() => Math.min(currentPage * itemsPerPage, totalItems));\n    const [startNumber, setStartNumber] = useState(() => Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1));\n    const [searchParamKeyPage] = useState(() => (prefixSearchParam ? `${prefixSearchParam}Page` : \"page\"));\n\n    const setPaginatorValues = useCallback(\n        ({ page }) => {\n            if (page) {\n                const param = {\n                    [searchParamKeyPage]: page,\n                };\n                setCurrentPage(() => page);\n                setUrlSearchParam(param);\n            }\n        },\n        [searchParamKeyPage]\n    );\n\n    const jump = useCallback(\n        (value) => {\n            const pageNumber = (validations.number(value, true) && parseInt(value, 10)) || undefined;\n            const page = Math.min(Math.max(1, pageNumber), totalPages);\n\n            setPaginatorValues({ page });\n        },\n        [setPaginatorValues, totalPages]\n    );\n\n    const prev = () => {\n        const page = currentPage > 1 ? Math.max(currentPage - 1, 1) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const next = () => {\n        const page = currentPage < totalPages ? currentPage < totalPages && Math.min(currentPage + 1, totalPages) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const first = () => {\n        const page = 1;\n\n        setPaginatorValues({ page });\n    };\n\n    const last = () => {\n        const page = totalPages;\n\n        setPaginatorValues({ page });\n    };\n\n    const currentData = useCallback(() => {\n        const begin = startNumber - 1;\n        const end = endNumber;\n        const tempPageData = data.slice(begin, end);\n        const pageData = tempPageData.map((item, index) => {\n            const tempItem = {\n                ...item,\n                position: startNumber + index,\n            };\n            return tempItem;\n        });\n\n        return pageData;\n    }, [data, endNumber, startNumber]);\n\n    useEffect(() => {\n        if (currentPage) {\n            const end = Math.min(currentPage * itemsPerPage, totalItems);\n            const start = Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1);\n\n            setStartNumber(start);\n            setEndNumber(end);\n        }\n    }, [currentPage, itemsPerPage, totalItems]);\n\n    useEffect(() => {\n        const items = data?.length || 0;\n        const tempTotalPages = Math.ceil(items / itemsPerPage);\n        setCurrentPage((pageNumber) => {\n            return pageNumber > tempTotalPages ? tempTotalPages : pageNumber || 1;\n        });\n        setTotalItems(() => items);\n        setTotalPages(() => tempTotalPages);\n    }, [data, itemsPerPage]);\n\n    useEffect(() => {\n        const currentUrlSearchAsObject = getCurrentUrlSearchAsObject();\n        const page = currentUrlSearchAsObject[searchParamKeyPage];\n\n        if (page) jump(page);\n    }, [jump, searchParamKeyPage]);\n\n    return { next, prev, first, last, jump, currentData, currentPage, totalPages, totalItems, startNumber, endNumber };\n};\n\nexport default usePagination;\n","import { useState, useLayoutEffect } from \"react\";\n\nconst convertUnit = ({ data, unit = \"rem\", includeUnit = true }) => {\n    const divideValue = unit === \"rem\" ? 16 : 1;\n    const newData = Object.fromEntries(\n        Array.from(Object.keys(DOMRect.prototype), (key) => {\n            const valueCalculated = data[key] / divideValue || 0;\n            const value = includeUnit ? `${valueCalculated}${unit}` : valueCalculated;\n\n            return [key, value];\n        })\n    );\n    return newData;\n};\n\nfunction useBoundingClientRect({ element, delay = 100, includeUnit = true }) {\n    const [boundingClientRect, setBoundingClientRect] = useState(() => element?.current?.getBoundingClientRect());\n\n    useLayoutEffect(() => {\n        let timeoutId = null;\n        let ignore = false;\n\n        const resizeListener = () => {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => {\n                const clientRect = element?.current?.getBoundingClientRect() || {};\n                const value = convertUnit({ data: clientRect, includeUnit });\n\n                setBoundingClientRect(value);\n            }, delay);\n        };\n\n        if (!ignore) resizeListener();\n        if (!ignore) window.addEventListener(\"resize\", resizeListener);\n\n        return () => {\n            ignore = true;\n            window.removeEventListener(\"resize\", resizeListener);\n        };\n    }, [delay, element, includeUnit]);\n\n    return boundingClientRect;\n}\n\nexport default useBoundingClientRect;\n","import { useEffect, useState } from \"react\";\n\nconst getScrollY = () => window.scrollY || document.documentElement.scrollTop || Math.abs(document.body.getBoundingClientRect().top);\nconst getScrollX = () => window.scrollX || document.documentElement.scrollLeft || Math.abs(document.body.getBoundingClientRect().left);\n\ntype TypeUseScrollPosition = {\n    scrollPositionY: number;\n    scrollPositionX: number;\n};\n\nconst useScrollPosition = (): TypeUseScrollPosition => {\n    const [scrollPositionY, setScrollPositionY] = useState(() => getScrollY());\n    const [scrollPositionX, setScrollPositionX] = useState(() => getScrollX());\n\n    useEffect(() => {\n        const updatePosition = () => {\n            setScrollPositionY(window.pageYOffset);\n            setScrollPositionX(window.pageXOffset);\n        };\n\n        window.addEventListener(\"scroll\", updatePosition);\n\n        return () => window.removeEventListener(\"scroll\", updatePosition);\n    }, []);\n\n    return { scrollPositionY, scrollPositionX };\n};\n\nexport default useScrollPosition;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"form_container__Kkhio\",\"unit\":\"form_unit__+m9tE\"};","import { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport loadable from \"@loadable/component\";\n\nimport { serializeForm, formPostValidation, apiCall, getType, convertObjectKeys } from \"@rrkallan/js-helpers\";\nimport { useDebounce } from \"@rrkallan/react-hooks\";\nimport Loading from \"@rrkallan/ui-library/Loading\";\n\nimport styles from \"./resources/styles/form.module.scss\";\n\nconst InputTypeText = loadable(() => import(/* webpackChunkName: \"InputTypeText\" */ \"@rrkallan/ui-library/FormElements/InputfieldText\"), {\n    fallback: <Loading />,\n});\n\nconst SliderButton = loadable(() => import(/* webpackChunkName: \"SliderButton\" */ \"@rrkallan/ui-library/FormElements/SliderButton\"), {\n    fallback: <Loading />,\n});\n\nconst Button = loadable(() => import(/* webpackChunkName: \"Button\" */ \"@rrkallan/ui-library/FormElements/Button\"), {\n    fallback: <Loading />,\n});\n\nconst Textarea = loadable(() => import(/* webpackChunkName: \"Textarea\" */ \"@rrkallan/ui-library/FormElements/Textarea\"), {\n    fallback: <Loading />,\n});\n\nfunction Form({\n    attributes,\n    customEventHandler,\n    customSubmitHandler,\n    fieldsets,\n    disableForm,\n    postFormWithApiCall,\n    resetForm,\n    submitButtonDisabled,\n    postData,\n}) {\n    const [formElements, setFormElements] = useState([]);\n    const [buttonElements, setButtonElements] = useState([]);\n    const [formData, setFormData] = useState([]);\n    const [currentValue, setCurrentValue] = useState();\n    const [clearValue, setClearValue] = useState(false);\n    const [submitDisabled, setSubmitDisabled] = useState(submitButtonDisabled);\n    const [resetDisabled, setResetDisabled] = useState(true);\n    const debouncedCurrentValue = useDebounce(currentValue, 150);\n\n    const formValidation = useCallback(() => {\n        let hasError = 0;\n\n        if (!formElements.length) hasError += 1;\n\n        formElements.forEach((element) => {\n            if (element?.hasAttribute(\"state\") && element?.getAttribute(\"state\") !== \"isValid\") hasError += 1;\n        });\n\n        if (clearValue) setSubmitDisabled(true);\n\n        if (!clearValue) setSubmitDisabled(!!hasError);\n    }, [formElements, clearValue]);\n\n    const setElementsToState = (formObject, updateElements = false) => {\n        const totalElements = formElements.length + buttonElements.length;\n        if (formObject && (totalElements !== formObject.elements.length || updateElements)) {\n            const tempObject = [...formObject.elements].reduce(\n                (dataObject, element) => {\n                    const tempDataObject = dataObject;\n                    const { type } = element;\n                    const tagName = element.tagName.toLowerCase();\n\n                    if (element && (tagName === \"button\" || [\"submit\", \"reset\", \"button\"].includes(type)))\n                        tempDataObject.buttons.push(element);\n\n                    if (element && ![\"fieldset\", \"button\"].includes(tagName) && ![\"submit\", \"reset\", \"button\"].includes(type))\n                        tempDataObject.elements.push(element);\n\n                    return tempDataObject;\n                },\n                { elements: [], buttons: [] }\n            );\n\n            setButtonElements(tempObject.buttons);\n            setFormElements(tempObject.elements);\n\n            const data = fieldsets.reduce(\n                (dataObject, fieldset) => {\n                    const tempDataObject = dataObject;\n                    const { elements } = fieldset || {};\n\n                    tempDataObject.elements.push(...elements);\n\n                    return tempDataObject;\n                },\n                { attributes, elements: [] }\n            );\n\n            setFormData(data);\n\n            formValidation();\n        }\n    };\n\n    const setDisabledAttributeOnFieldsets = (disabled = true) => {\n        fieldsets.map((fieldset) => {\n            const currentFieldset = fieldset;\n            currentFieldset.disabled = disabled;\n\n            return disabled;\n        });\n    };\n\n    const handleFormInValid = (errorMessages) => {\n        const error = getType(errorMessages) === \"object\" ? Object.values(errorMessages) : [errorMessages];\n        const response = {\n            ok: false,\n            error,\n        };\n\n        setDisabledAttributeOnFieldsets(false);\n\n        return response;\n    };\n\n    const formApiCall = async ({ formPostUrl, data, method }) => {\n        const response = await apiCall({ url: formPostUrl, method, body: data });\n        const contentType = response?.headers?.get(\"content-type\")?.split(\";\")?.shift();\n        const isJsonResponse = contentType === \"application/json\";\n        const responseData = isJsonResponse\n            ? await response.json()\n            : { error: { message: \"System error contact your system administrator\" } };\n        const responseDataConverted = await convertObjectKeys({ data: responseData });\n\n        if (!response.ok) return handleFormInValid(responseDataConverted?.error);\n\n        return responseDataConverted;\n    };\n\n    const getResponse = async (formObject, data) => {\n        if (postFormWithApiCall) {\n            const { method } = formObject;\n            const formPostUrl = formObject.action;\n\n            const response = await formApiCall({ formPostUrl, data, method });\n\n            return response;\n        }\n\n        return {\n            ok: true,\n            status: 200,\n            data,\n        };\n    };\n\n    const disableButtons = useCallback(() => {\n        setSubmitDisabled(true);\n        setResetDisabled(true);\n    }, []);\n\n    const resetFormElements = useCallback(() => setClearValue(true), []);\n\n    const onResetHandler = () => {\n        disableButtons();\n        resetFormElements();\n    };\n\n    const onEventHandler = (event) => {\n        const formElement = event?.target;\n        const formObject = formElement?.form;\n        const formElementValue = formElement?.value || \"\";\n        const updateElementsInState = getType(customEventHandler) === \"function\" ? customEventHandler(event) : false;\n\n        if (clearValue) setClearValue(false);\n        if (currentValue !== formElementValue) setCurrentValue(formElementValue);\n\n        if (resetDisabled && event.type === \"change\") setResetDisabled(false);\n\n        setElementsToState(formObject, updateElementsInState);\n    };\n\n    const convertDataForAPI = (postDataObject) => {\n        const convertedData = Object.keys(postDataObject).reduce((data, key) => {\n            const newData = {\n                ...data,\n                [key]: postDataObject[key].values,\n            };\n\n            return newData;\n        }, {});\n\n        return convertedData;\n    };\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n        document.activeElement.blur();\n\n        disableButtons();\n        setDisabledAttributeOnFieldsets(true);\n\n        const formObject = event.currentTarget || event.target;\n        const formObjectData = serializeForm(formObject, formData);\n        const postDataObject = { ...postData, ...formObjectData.postData };\n        const errorMessages = formPostValidation(postDataObject);\n\n        if (errorMessages) {\n            const errorResponse = handleFormInValid(errorMessages);\n\n            if (customSubmitHandler) customSubmitHandler(errorResponse);\n            return;\n        }\n\n        const data = convertDataForAPI(postDataObject);\n        const response = getResponse(formObject, data);\n\n        formObject.reset();\n\n        if (customSubmitHandler) customSubmitHandler(response);\n\n        setDisabledAttributeOnFieldsets(false);\n        setClearValue(true);\n    };\n\n    useEffect(() => {\n        if ((debouncedCurrentValue || debouncedCurrentValue === \"\") && formElements) formValidation();\n    }, [debouncedCurrentValue, formElements, formValidation]);\n\n    useEffect(() => {\n        if (formElements) formValidation();\n    }, [formElements, formValidation]);\n\n    useEffect(() => {\n        setSubmitDisabled(submitButtonDisabled);\n    }, [submitButtonDisabled]);\n\n    useEffect(() => {\n        if (resetForm) {\n            disableButtons();\n            resetFormElements();\n        }\n    }, [disableButtons, resetForm, resetFormElements]);\n\n    return (\n        <form\n            {...attributes}\n            onSubmit={onSubmitHandler}\n            onReset={onResetHandler}\n            onChange={onEventHandler}\n            onFocus={onEventHandler}\n            onBlur={onEventHandler}\n        >\n            {fieldsets?.map((fieldset) => {\n                const { elements, disabled } = fieldset;\n                const disabledFieldset = disableForm || disabled || false;\n\n                return (\n                    <fieldset key={fieldset.id} className={styles.container} disabled={disabledFieldset}>\n                        <div className={styles.unit} variant={fieldset.variant || null}>\n                            {elements.map((formElement) => {\n                                const { id, node, ...element } = formElement;\n                                element.disabled = disabledFieldset || element.disabled;\n\n                                switch (node) {\n                                    case \"input\":\n                                        return <InputTypeText key={id} id={id} {...element} clearValue={clearValue} />;\n                                    case \"slider\":\n                                        return <SliderButton key={id} id={id} {...element} clearValue={clearValue} />;\n                                    case \"textarea\":\n                                        return <Textarea key={id} id={id} {...element} clearValue={clearValue} />;\n                                    case \"button\":\n                                        if (element.type === \"submit\") element.disabled = submitDisabled;\n\n                                        if (element.type === \"reset\") element.disabled = resetDisabled;\n\n                                        return <Button key={id} id={id} {...element} />;\n                                    default:\n                                        return null;\n                                }\n                            })}\n                        </div>\n                    </fieldset>\n                );\n            })}\n        </form>\n    );\n}\n\nForm.defaultProps = {\n    customEventHandler: undefined,\n    customSubmitHandler: undefined,\n    disableForm: false,\n    postFormWithApiCall: true,\n    resetForm: false,\n    submitButtonDisabled: true,\n    postData: undefined,\n};\n\nForm.propTypes = {\n    attributes: PropTypes.shape({}).isRequired,\n    customEventHandler: PropTypes.func,\n    customSubmitHandler: PropTypes.func,\n    fieldsets: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    disableForm: PropTypes.bool,\n    postFormWithApiCall: PropTypes.bool,\n    resetForm: PropTypes.bool,\n    submitButtonDisabled: PropTypes.bool,\n    postData: PropTypes.shape({}),\n};\n\nexport default Form;\n"],"names":["value","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","setTimeout","clearTimeout","data","itemsPerPage","prefixSearchParam","undefined","totalItems","setTotalItems","length","totalPages","setTotalPages","Math","ceil","currentPage","setCurrentPage","endNumber","setEndNumber","min","startNumber","setStartNumber","max","searchParamKeyPage","setPaginatorValues","useCallback","page","param","setUrlSearchParam","jump","pageNumber","validations","parseInt","prev","next","first","last","currentData","begin","end","slice","map","item","index","position","start","items","tempTotalPages","getCurrentUrlSearchAsObject","element","includeUnit","boundingClientRect","setBoundingClientRect","current","getBoundingClientRect","useLayoutEffect","timeoutId","ignore","resizeListener","unit","divideValue","Object","fromEntries","Array","from","keys","DOMRect","prototype","key","valueCalculated","convertUnit","window","addEventListener","removeEventListener","scrollPositionY","setScrollPositionY","scrollY","document","documentElement","scrollTop","abs","body","top","scrollPositionX","setScrollPositionX","scrollX","scrollLeft","left","updatePosition","pageYOffset","pageXOffset","InputTypeText","loadable","fallback","Loading","SliderButton","Button","Textarea","Form","attributes","customEventHandler","customSubmitHandler","fieldsets","disableForm","postFormWithApiCall","resetForm","submitButtonDisabled","postData","formElements","setFormElements","buttonElements","setButtonElements","formData","setFormData","currentValue","setCurrentValue","clearValue","setClearValue","submitDisabled","setSubmitDisabled","resetDisabled","setResetDisabled","debouncedCurrentValue","useDebounce","formValidation","hasError","forEach","hasAttribute","getAttribute","setDisabledAttributeOnFieldsets","disabled","fieldset","handleFormInValid","errorMessages","response","ok","error","getType","values","getResponse","async","formObject","method","formPostUrl","action","apiCall","url","responseData","headers","get","split","shift","json","message","responseDataConverted","convertObjectKeys","formApiCall","status","disableButtons","resetFormElements","onEventHandler","event","formElement","target","form","formElementValue","updateElementsInState","type","updateElements","totalElements","elements","tempObject","reduce","dataObject","tempDataObject","tagName","toLowerCase","includes","buttons","push","setElementsToState","onSubmit","preventDefault","activeElement","blur","currentTarget","formObjectData","serializeForm","postDataObject","formPostValidation","errorResponse","convertDataForAPI","reset","onReset","onChange","onFocus","onBlur","disabledFieldset","className","styles","variant","id","node","defaultProps"],"sourceRoot":""}