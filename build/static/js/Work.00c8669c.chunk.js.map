{"version":3,"file":"static/js/Work.00c8669c.chunk.js","mappings":"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","sources":["Store/hooks/index.ts","features/Clients/Assignments/resources/data/clientLayout.tsx","features/Clients/clientsSelector.ts","pages/Work/index.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { ThunkDispatch, AnyAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppDispatch } from \"Store/types\";\n\nconst useAppDispatch = (): ThunkDispatch<RootState, AppDispatch, AnyAction> => useDispatch();\nconst useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport { useAppDispatch, useAppSelector };\n","const clientLayout = [\n    {\n        row: 1,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 2,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 3,\n        items: 4,\n        deviding: \"list=2,3,4\",\n    },\n    {\n        row: 4,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 5,\n        items: 4,\n        deviding: \"list=1,2,3\",\n    },\n    {\n        row: 6,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 7,\n        items: 2,\n        deviding: \"equal\",\n    },\n    {\n        row: 8,\n        items: 0,\n        component: \"quotes\",\n        deviding: undefined,\n    },\n    {\n        row: 9,\n        items: 2,\n        deviding: \"equal\",\n    },\n];\n\nexport default clientLayout;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"Store/types\";\nimport { validations } from \"@rrkallan/js-helpers\";\nimport clientLayout from \"./Assignments/resources/data/clientLayout\";\nimport type { InterfaceClientsState, TypeRowLayout, TypeEntitiesSelector } from \"./types\";\n\nconst clientsState = ({ clients }: RootState): InterfaceClientsState => clients;\n\nconst getAssignmentsError = createSelector(clientsState, ({ assignments }) => assignments.error);\nconst getAssignmentsLoading = createSelector(clientsState, ({ assignments }) => assignments.loading);\nconst assignmentsIsLoaded = createSelector(clientsState, ({ assignments }) => {\n    const { loading } = assignments;\n    const isLoaded = [\"fulfilled\", \"rejected\"].includes(loading);\n    return isLoaded;\n});\n\nconst getAssignmentsEntities = createSelector(clientsState, ({ assignments }) => {\n    const { entities, filter } = assignments || {};\n    if (validations.isEmpty(entities)) return [];\n    const filterKeys = Object.entries(filter || {});\n\n    const entitiesFiltered =\n        (filterKeys.length > 0 &&\n            entities?.reduce((previousValue, currentValue: any): any => {\n                const tempResult: any = previousValue;\n\n                let isFilterValues = true;\n                filterKeys.forEach(([key, value]: any) => {\n                    if (isFilterValues && value !== undefined) isFilterValues = currentValue?.[key] === value;\n                });\n\n                if (isFilterValues) tempResult.push(currentValue);\n\n                return tempResult;\n            }, [])) ||\n        entities;\n\n    const entitiesSplittedByRow = clientLayout.reduce(\n        (previousValue: any, currentValue): TypeEntitiesSelector => {\n            const { result, startWith } = previousValue;\n            const { items, row, component, deviding }: TypeRowLayout = currentValue;\n            const tempResult = result;\n            const endWidth = startWith + items;\n            const itemsForRow = entitiesFiltered?.slice(startWith, endWidth) || [];\n            const isListView = deviding?.startsWith(\"list\");\n\n            if (validations.isEmpty(itemsForRow) && validations.isEmpty(component))\n                return {\n                    result: tempResult,\n                    startWith: endWidth,\n                };\n\n            const block: any = [[], []];\n            if (isListView && validations.isEmpty(component)) {\n                const keysAsList =\n                    deviding\n                        ?.split(\"=\")[1]\n                        .split(\",\")\n                        .map((key) => Number(key) - 1) || [];\n\n                const listIsBlock = Number(keysAsList[0] === 0);\n\n                itemsForRow.forEach((item, key) => {\n                    if (keysAsList?.includes(key)) block[listIsBlock].push(item);\n                    if (!keysAsList?.includes(key)) block[Number(!listIsBlock)] = item;\n                });\n            }\n\n            const resultForRow = {\n                items: isListView ? block : itemsForRow,\n                layout: {\n                    items,\n                    row,\n                    component,\n                    deviding,\n                },\n            };\n            tempResult.push(resultForRow);\n\n            const newValue = {\n                result: tempResult,\n                startWith: endWidth,\n            };\n\n            return newValue;\n        },\n        { result: [], startWith: 0 }\n    );\n\n    if (entitiesFiltered?.length === 0) {\n        const error = {\n            items: 0,\n            layout: {\n                items: 0,\n                row: 1,\n                component: \"noResult\",\n                deviding: \"full\",\n            },\n        };\n        entitiesSplittedByRow.result.unshift(error);\n    }\n\n    return entitiesSplittedByRow.result;\n});\n\nconst getAssignmentById = createSelector([clientsState, (_, data) => data], ({ assignments }, data) => {\n    const { id } = data || {};\n    const { ids } = assignments || {};\n    const assignment = ids?.[id];\n\n    return assignment || {};\n});\n\nconst getQuotesError = createSelector(clientsState, ({ quotes }) => quotes.error);\nconst getQuotesLoading = createSelector(clientsState, ({ quotes }) => quotes.loading);\nconst getQuotesIsLoaded = createSelector(clientsState, ({ quotes }) => {\n    const { loading, entities, error } = quotes;\n    const isLoaded = (!loading && !!entities) || !!error;\n    return isLoaded;\n});\nconst getQuotes = createSelector(clientsState, ({ quotes }) => quotes.entities);\nconst getQuote = createSelector(clientsState, ({ quotes }) => {\n    const { entities } = quotes || {};\n    const length = entities?.length || 0;\n    const key = length - 1;\n\n    return entities?.[key];\n});\n\nexport {\n    getAssignmentsLoading,\n    getAssignmentsError,\n    getAssignmentsEntities,\n    assignmentsIsLoaded,\n    getAssignmentById,\n    getQuotesError,\n    getQuotesIsLoaded,\n    getQuotesLoading,\n    getQuotes,\n    getQuote,\n};\n","import { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useAppDispatch, useAppSelector } from \"Store/hooks\";\nimport { fetchClients } from \"features/Clients/clientsSlice\";\nimport { assignmentsIsLoaded } from \"features/Clients/clientsSelector\";\nimport { Loading } from \"@rrkallan/ui-library\";\n\nconst SubRoutes = loadable(() => import(/* webpackChunkName: \"SubRoutes\" */ \"Routes/SubRoutes\"), {\n    fallback: <Loading />,\n});\n\nfunction Work(): JSX.Element {\n    const dispatch = useAppDispatch();\n    const isLoaded = useAppSelector(assignmentsIsLoaded);\n\n    useEffect(() => {\n        if (!isLoaded) dispatch(fetchClients({ key: \"assignments\" }));\n    }, [dispatch, isLoaded]);\n\n    if (!isLoaded) return <Loading />;\n\n    return <SubRoutes />;\n}\n\nexport default Work;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","row","items","deviding","component","undefined","clientsState","clients","assignmentsIsLoaded","createSelector","assignments","error","loading","includes","getAssignmentsEntities","entities","filter","validations","filterKeys","Object","entries","entitiesFiltered","length","reduce","previousValue","currentValue","tempResult","isFilterValues","forEach","key","value","push","entitiesSplittedByRow","clientLayout","result","startWith","endWidth","itemsForRow","slice","isListView","startsWith","block","keysAsList","split","map","Number","listIsBlock","item","resultForRow","layout","unshift","getAssignmentById","_","data","id","ids","getQuotesIsLoaded","quotes","getQuote","SubRoutes","loadable","fallback","dispatch","isLoaded","useEffect","fetchClients","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","put","getEntries","clear","createSingletonCache","cacheIndex","findIndex","splice","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}