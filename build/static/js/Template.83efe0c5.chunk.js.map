{"version":3,"file":"static/js/Template.83efe0c5.chunk.js","mappings":"wLAEO,MAAMA,UAAoBC,EAAAA,cAC7BC,cACIC,SAASC,WACTC,KAAKC,MAAQ,CACTC,cAAc,GAElBF,KAAKG,qBAAuB,KACxB,MAAM,UAAEC,GAAcJ,KAAKK,OACrB,aAAEH,GAAiBE,EAAUE,WAC/BJ,IACIF,KAAKK,MAAME,aACXC,QAAQC,QAAQT,KAAKK,MAAME,gBACtBG,SAAQ,IAAMV,KAAKW,SAAS,CAAET,cAAc,MAGjDF,KAAKW,SAAS,CAAET,cAAc,IAElCF,KAAKY,cAAgBZ,KAAKY,eAC7B,CAER,CACDC,oBACIb,KAAKY,aAAeZ,KAAKK,MAAMD,UAAUU,UAAUd,KAAKG,qBAAqBY,KAAKf,OAClFA,KAAKG,sBACR,CACDa,uBACIhB,KAAKY,cAAgBZ,KAAKY,cAC7B,CACDK,SAKI,MAAmC,oBAAxBjB,KAAKK,MAAMa,SACXlB,KAAKK,MAAMa,SAASlB,KAAKC,MAAMC,cAEnCF,KAAKC,MAAMC,aAAeF,KAAKK,MAAMa,SAAWlB,KAAKK,MAAMc,OACrE,EAELxB,EAAYyB,aAAe,CACvBF,SAAU,KACVC,QAAS,M,wBC1Cb,EAA4B,4B,SCM5B,MAAME,GAAaC,EAAAA,EAAAA,KAAS,IAAM,gEAAuD,CACrFC,UAAU,SAAC,KAAD,MAGRC,GAASF,EAAAA,EAAAA,KAAS,IAAM,+BAA8D,CACxFC,UAAU,SAAC,KAAD,MAGRE,GAASH,EAAAA,EAAAA,KAAS,IAAM,8BAA8D,CACxFC,UAAU,SAAC,KAAD,MAGRG,GAAcJ,EAAAA,EAAAA,KAAS,IAAM,8BAAkF,CACjHC,UAAU,SAAC,KAAD,MAoBd,MAjBA,WACI,OACI,iCACI,SAACC,EAAD,KACA,iBAAMG,UAAWC,EAAjB,UACI,SAACjC,EAAD,CAAawB,SAAS,SAAC,KAAD,CAASU,KAAK,8BAAgCzB,UAAWA,EAAAA,EAA/E,UACI,SAAC,EAAA0B,SAAD,CAAUP,UAAU,SAAC,KAAD,IAApB,UACI,SAACF,EAAD,WAIZ,SAACI,EAAD,KACA,SAACC,EAAD,MAGX,C","sources":["../node_modules/reduxjs-toolkit-persist/es/integration/react.js","webpack://rrkallan-demo/./src/Template/resources/styles/template.module.scss?2e91","Template/index.tsx"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { PureComponent } from 'react';\nexport class PersistGate extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            bootstrapped: false,\n        };\n        this.handlePersistorState = () => {\n            const { persistor } = this.props;\n            const { bootstrapped } = persistor.getState();\n            if (bootstrapped) {\n                if (this.props.onBeforeLift) {\n                    Promise.resolve(this.props.onBeforeLift())\n                        .finally(() => this.setState({ bootstrapped: true }));\n                }\n                else {\n                    this.setState({ bootstrapped: true });\n                }\n                this._unsubscribe && this._unsubscribe();\n            }\n        };\n    }\n    componentDidMount() {\n        this._unsubscribe = this.props.persistor.subscribe(this.handlePersistorState.bind(this));\n        this.handlePersistorState();\n    }\n    componentWillUnmount() {\n        this._unsubscribe && this._unsubscribe();\n    }\n    render() {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof this.props.children === 'function' && this.props.loading)\n                console.error('reduxjs-toolkit-persist: PersistGate expects either a function child or loading prop, but not both. The loading prop will be ignored.');\n        }\n        if (typeof this.props.children === 'function') {\n            return this.props.children(this.state.bootstrapped);\n        }\n        return this.state.bootstrapped ? this.props.children : this.props.loading;\n    }\n}\nPersistGate.defaultProps = {\n    children: null,\n    loading: null\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"template_container__uZXXF\"};","import { Suspense } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { PersistGate } from \"reduxjs-toolkit-persist/integration/react\";\nimport { persistor } from \"Store\";\nimport { Loading } from \"@rrkallan/ui-library\";\nimport styles from \"./resources/styles/template.module.scss\";\n\nconst MainRoutes = loadable(() => import(/* webpackChunkName: \"MainRoutes\" */ \"Routes\"), {\n    fallback: <Loading />,\n});\n\nconst Header = loadable(() => import(/* webpackChunkName: \"Header\" */ \"components/Header\"), {\n    fallback: <Loading />,\n});\n\nconst Footer = loadable(() => import(/* webpackChunkName: \"Footer\" */ \"components/Footer\"), {\n    fallback: <Loading />,\n});\n\nconst ScrollToTop = loadable(() => import(/* webpackChunkName: \"ScrollToTop\" */ \"@rrkallan/ui-library/ScrollToTop\"), {\n    fallback: <Loading />,\n});\n\nfunction Template(): JSX.Element {\n    return (\n        <>\n            <Header />\n            <main className={styles.container}>\n                <PersistGate loading={<Loading text=\"Webapplication is Loading\" />} persistor={persistor}>\n                    <Suspense fallback={<Loading />}>\n                        <MainRoutes />\n                    </Suspense>\n                </PersistGate>\n            </main>\n            <Footer />\n            <ScrollToTop />\n        </>\n    );\n}\n\nexport default Template;\n"],"names":["PersistGate","PureComponent","constructor","super","arguments","this","state","bootstrapped","handlePersistorState","persistor","props","getState","onBeforeLift","Promise","resolve","finally","setState","_unsubscribe","componentDidMount","subscribe","bind","componentWillUnmount","render","children","loading","defaultProps","MainRoutes","loadable","fallback","Header","Footer","ScrollToTop","className","styles","text","Suspense"],"sourceRoot":""}