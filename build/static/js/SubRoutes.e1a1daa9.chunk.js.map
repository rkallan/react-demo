{"version":3,"file":"static/js/SubRoutes.e1a1daa9.chunk.js","mappings":"qNACA,EAA4B,6B,SCuC5B,MAjCA,WACI,MAAM,SAAEA,KAAaC,IAAaC,EAAAA,EAAAA,OAC5B,QAAEC,GAAYF,EAASG,OAAS,CAAC,EACjCC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,eAAcV,EAAUW,EAAAA,GAmB3C,OAjBAC,EAAAA,EAAAA,YAAU,KACN,MAAM,SAAEC,GAAaR,EAAQS,MAAMC,SAASD,MAAME,MAAMC,QAAQC,UAAU,GAAGC,OAAS,CAAC,EAEvF,GAAIN,EAAU,CACV,MAEMO,GAFcpB,EAASqB,MAAM,KAAKC,QAAQC,GAASC,EAAAA,GAAAA,WAAuBD,GAAM,KAClDE,SAAS,SACfC,OAAOzB,SAASmB,KAAOjB,EAAQiB,KAO7Db,EAASM,EAAU,CAAEc,SAAS,EAAMvB,MANtB,CACVD,QAAS,CACLiB,UAKX,IACF,CAACb,EAAUF,EAASL,EAAUG,IAE1BM,GAAYmB,IAEX,SAAC,EAAAC,SAAA,QAAD,CAAkBC,UAAWC,EAAkBH,MAAOA,EAAtD,UACI,SAAC,KAAD,OAIf,C","sources":["webpack://rrkallan-demo/./src/Routes/SubRoutes/resources/styles/subRoutes.module.scss?1cc1","Routes/SubRoutes/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"subRoutes_container__FTglw\"};","import { useEffect } from \"react\";\nimport { Outlet, useLocation, useOutlet, useNavigate } from \"react-router-dom\";\nimport { useTransition, animated } from \"@react-spring/web\";\nimport { pageAnimation } from \"Routes/configuration\";\nimport { validations } from \"@rrkallan/js-helpers\";\nimport styles from \"./resources/styles/subRoutes.module.scss\";\n\nfunction SubRoutes() {\n    const { pathname, ...location } = useLocation();\n    const { referer } = location.state || {};\n    const element = useOutlet();\n    const navigate = useNavigate();\n    const transition = useTransition(pathname, pageAnimation);\n\n    useEffect(() => {\n        const { redirect } = element.props.children.props.value.matches.reverse()[0].route || {};\n\n        if (redirect) {\n            const pathAsArray = pathname.split(\"/\").filter((item) => validations.isNotEmpty(item, true));\n            const isNotPathError = !pathAsArray.includes(\"error\");\n            const href = isNotPathError ? window.location.href : referer.href;\n            const state = {\n                referer: {\n                    href,\n                },\n            };\n\n            navigate(redirect, { replace: true, state });\n        }\n    }, [navigate, element, pathname, referer]);\n\n    return transition((style) => {\n        return (\n            <animated.section className={styles.container} style={style}>\n                <Outlet />\n            </animated.section>\n        );\n    });\n}\n\nexport default SubRoutes;\n"],"names":["pathname","location","useLocation","referer","state","element","useOutlet","navigate","useNavigate","transition","useTransition","pageAnimation","useEffect","redirect","props","children","value","matches","reverse","route","href","split","filter","item","validations","includes","window","replace","style","animated","className","styles"],"sourceRoot":""}