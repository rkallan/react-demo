{"version":3,"file":"static/js/SearchFornm.a8a6c930.chunk.js","mappings":"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","sources":["@rrkallan/react-hooks/useDebounce/index.js","@rrkallan/react-hooks/usePagination/index.js","@rrkallan/react-hooks/useBoundingClientRect/index.js","@rrkallan/react-hooks/useScrollPosition/index.tsx","pages/TvShows/SearchForm/constants/searchForm.js","pages/TvShows/SearchForm/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { validations, getCurrentUrlSearchAsObject, setUrlSearchParam } from \"@rrkallan/js-helpers\";\n\nconst usePagination = (data, itemsPerPage = 10, prefixSearchParam = undefined) => {\n    const [totalItems, setTotalItems] = useState(() => data?.length || 0);\n    const [totalPages, setTotalPages] = useState(() => Math.ceil(totalItems / itemsPerPage));\n    const [currentPage, setCurrentPage] = useState(() => 1);\n    const [endNumber, setEndNumber] = useState(() => Math.min(currentPage * itemsPerPage, totalItems));\n    const [startNumber, setStartNumber] = useState(() => Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1));\n    const [searchParamKeyPage] = useState(() => (prefixSearchParam ? `${prefixSearchParam}Page` : \"page\"));\n\n    const setPaginatorValues = useCallback(\n        ({ page }) => {\n            if (page) {\n                const param = {\n                    [searchParamKeyPage]: page,\n                };\n                setCurrentPage(() => page);\n                setUrlSearchParam(param);\n            }\n        },\n        [searchParamKeyPage]\n    );\n\n    const jump = useCallback(\n        (value) => {\n            const pageNumber = (validations.number(value, true) && parseInt(value, 10)) || undefined;\n            const page = Math.min(Math.max(1, pageNumber), totalPages);\n\n            setPaginatorValues({ page });\n        },\n        [setPaginatorValues, totalPages]\n    );\n\n    const prev = () => {\n        const page = currentPage > 1 ? Math.max(currentPage - 1, 1) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const next = () => {\n        const page = currentPage < totalPages ? currentPage < totalPages && Math.min(currentPage + 1, totalPages) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const first = () => {\n        const page = 1;\n\n        setPaginatorValues({ page });\n    };\n\n    const last = () => {\n        const page = totalPages;\n\n        setPaginatorValues({ page });\n    };\n\n    const currentData = useCallback(() => {\n        const begin = startNumber - 1;\n        const end = endNumber;\n        const tempPageData = data.slice(begin, end);\n        const pageData = tempPageData.map((item, index) => {\n            const tempItem = {\n                ...item,\n                position: startNumber + index,\n            };\n            return tempItem;\n        });\n\n        return pageData;\n    }, [data, endNumber, startNumber]);\n\n    useEffect(() => {\n        if (currentPage) {\n            const end = Math.min(currentPage * itemsPerPage, totalItems);\n            const start = Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1);\n\n            setStartNumber(start);\n            setEndNumber(end);\n        }\n    }, [currentPage, itemsPerPage, totalItems]);\n\n    useEffect(() => {\n        const items = data?.length || 0;\n        const tempTotalPages = Math.ceil(items / itemsPerPage);\n        setCurrentPage((pageNumber) => {\n            return pageNumber > tempTotalPages ? tempTotalPages : pageNumber || 1;\n        });\n        setTotalItems(() => items);\n        setTotalPages(() => tempTotalPages);\n    }, [data, itemsPerPage]);\n\n    useEffect(() => {\n        const currentUrlSearchAsObject = getCurrentUrlSearchAsObject();\n        const page = currentUrlSearchAsObject[searchParamKeyPage];\n\n        if (page) jump(page);\n    }, [jump, searchParamKeyPage]);\n\n    return { next, prev, first, last, jump, currentData, currentPage, totalPages, totalItems, startNumber, endNumber };\n};\n\nexport default usePagination;\n","import { useState, useLayoutEffect } from \"react\";\n\nconst convertUnit = ({ data, unit = \"rem\", includeUnit = true }) => {\n    const divideValue = unit === \"rem\" ? 16 : 1;\n    const newData = Object.fromEntries(\n        Array.from(Object.keys(DOMRect.prototype), (key) => {\n            const valueCalculated = data[key] / divideValue || 0;\n            const value = includeUnit ? `${valueCalculated}${unit}` : valueCalculated;\n\n            return [key, value];\n        })\n    );\n    return newData;\n};\n\nfunction useBoundingClientRect({ element, delay = 100, includeUnit = true }) {\n    const [boundingClientRect, setBoundingClientRect] = useState(() => element?.current?.getBoundingClientRect());\n\n    useLayoutEffect(() => {\n        let timeoutId = null;\n        let ignore = false;\n\n        const resizeListener = () => {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => {\n                const clientRect = element?.current?.getBoundingClientRect() || {};\n                const value = convertUnit({ data: clientRect, includeUnit });\n\n                setBoundingClientRect(value);\n            }, delay);\n        };\n\n        if (!ignore) resizeListener();\n        if (!ignore) window.addEventListener(\"resize\", resizeListener);\n\n        return () => {\n            ignore = true;\n            window.removeEventListener(\"resize\", resizeListener);\n        };\n    }, [delay, element, includeUnit]);\n\n    return boundingClientRect;\n}\n\nexport default useBoundingClientRect;\n","import { useEffect, useState } from \"react\";\n\nconst getScrollY = () => window.scrollY || document.documentElement.scrollTop || Math.abs(document.body.getBoundingClientRect().top);\nconst getScrollX = () => window.scrollX || document.documentElement.scrollLeft || Math.abs(document.body.getBoundingClientRect().left);\n\ntype TypeUseScrollPosition = {\n    scrollPositionY: number;\n    scrollPositionX: number;\n};\n\nconst useScrollPosition = (): TypeUseScrollPosition => {\n    const [scrollPositionY, setScrollPositionY] = useState(() => getScrollY());\n    const [scrollPositionX, setScrollPositionX] = useState(() => getScrollX());\n\n    useEffect(() => {\n        const updatePosition = () => {\n            setScrollPositionY(window.pageYOffset);\n            setScrollPositionX(window.pageXOffset);\n        };\n\n        window.addEventListener(\"scroll\", updatePosition);\n\n        return () => window.removeEventListener(\"scroll\", updatePosition);\n    }, []);\n\n    return { scrollPositionY, scrollPositionX };\n};\n\nexport default useScrollPosition;\n","import { store } from \"Store\";\n\nconst unsubscribe = store.subscribe(() => {});\n\nstore.subscribe(() => {});\n\nconst searchForm = () => {\n    const { tvShows } = store.getState();\n    const { search } = tvShows;\n    return {\n        attributes: {\n            method: \"get\",\n            name: \"search-tv-shows-form\",\n            autoComplete: \"off\",\n            \"data-required\": true,\n            action: process.env.REACT_APP_API_SHOWS_SEARCH,\n            noValidate: true,\n        },\n        fieldsets: [\n            {\n                id: 1,\n                caption: null,\n                disabled: false,\n                form: null,\n                name: null,\n                elements: [\n                    {\n                        id: 1,\n                        name: \"q\",\n                        title: \"Search tv shows by title\",\n                        type: \"search\",\n                        validationTypes: {\n                            hasMinimalAndMaximalCharacters: { minCharacters: 2, maxCharacters: 256 },\n                        },\n                        defaultValue: search.value || undefined,\n                        disabled: false,\n                        node: \"input\",\n                    },\n                ],\n            },\n        ],\n        test: store.getState(),\n    };\n};\n\nexport default searchForm;\n\nexport { unsubscribe };\n","import { useEffect, useState, ChangeEvent } from \"react\";\nimport loadable from \"@loadable/component\";\nimport Loading from \"@rrkallan/ui-library/Loading\";\nimport { objectAsUrlParams, urlParamsAsObject, validations } from \"@rrkallan/js-helpers\";\nimport { useDebounce } from \"@rrkallan/react-hooks\";\nimport { useAppDispatch } from \"Store/hooks\";\nimport { setSearchValue } from \"features/TvShows/tvShowsSlice\";\nimport formData from \"./constants/searchForm\";\n\nconst Form = loadable(() => import(/* webpackChunkName: \"LoginForm\" */ \"@rrkallan/ui-library/Form\"), {\n    fallback: <Loading />,\n});\n\nfunction SearchFornm(): JSX.Element {\n    const dispatch = useAppDispatch();\n    const searchFormData = formData();\n    const [currentValue, setCurrentValue] = useState((): string | undefined => undefined);\n    const debouncedCurrentValue = useDebounce(currentValue, 500);\n\n    const formOnChangeHandler = async (event: ChangeEvent<HTMLFormElement>) => {\n        const element = event.target;\n        const { name, value } = element || {};\n\n        setCurrentValue(`${name}:${value.trim()}`);\n    };\n\n    useEffect(() => {\n        if (debouncedCurrentValue || validations.isEmpty(debouncedCurrentValue)) {\n            const currentUrlSearch = window.location.search;\n            const currentUrlSearchAsObject = urlParamsAsObject(currentUrlSearch);\n            const [key, value] = debouncedCurrentValue?.split(\":\") || [];\n\n            const searchObject = {\n                ...currentUrlSearchAsObject,\n                [key]: value ?? currentUrlSearchAsObject[key],\n            };\n            const search = objectAsUrlParams(searchObject);\n            const isSearchCurrentUrlSearch = search === currentUrlSearch;\n\n            const payloadValue = {\n                searchValue: searchObject.q,\n            };\n\n            dispatch(setSearchValue(payloadValue));\n\n            if (!isSearchCurrentUrlSearch) window.history.pushState({}, \"\", !search ? window.location.pathname : search);\n        }\n    }, [debouncedCurrentValue, dispatch]);\n\n    return (\n        <Form\n            customEventHandler={formOnChangeHandler}\n            customSubmitHandler={undefined}\n            disableForm={undefined}\n            resetForm={undefined}\n            submitButtonDisabled={undefined}\n            {...searchFormData}\n            postFormWithApiCall\n            postData={undefined}\n        />\n    );\n}\n\nexport default SearchFornm;\n"],"names":["value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","data","itemsPerPage","prefixSearchParam","undefined","length","totalItems","setTotalItems","Math","ceil","totalPages","setTotalPages","currentPage","setCurrentPage","min","endNumber","setEndNumber","max","startNumber","setStartNumber","searchParamKeyPage","setPaginatorValues","useCallback","page","param","setUrlSearchParam","jump","pageNumber","validations","parseInt","prev","next","first","last","currentData","begin","end","slice","map","item","index","position","start","items","tempTotalPages","getCurrentUrlSearchAsObject","element","includeUnit","current","getBoundingClientRect","boundingClientRect","setBoundingClientRect","useLayoutEffect","timeoutId","ignore","resizeListener","unit","divideValue","Object","fromEntries","Array","from","keys","DOMRect","prototype","key","valueCalculated","convertUnit","window","addEventListener","removeEventListener","scrollY","document","documentElement","scrollTop","abs","body","top","scrollPositionY","setScrollPositionY","scrollX","scrollLeft","left","scrollPositionX","setScrollPositionX","updatePosition","pageYOffset","pageXOffset","store","attributes","method","name","autoComplete","action","process","noValidate","fieldsets","id","caption","disabled","form","elements","title","type","validationTypes","hasMinimalAndMaximalCharacters","minCharacters","maxCharacters","defaultValue","tvShows","search","node","test","Form","loadable","fallback","Loading","dispatch","useAppDispatch","searchFormData","formData","currentValue","setCurrentValue","debouncedCurrentValue","useDebounce","formOnChangeHandler","event","target","trim","currentUrlSearch","location","currentUrlSearchAsObject","urlParamsAsObject","split","searchObject","objectAsUrlParams","isSearchCurrentUrlSearch","payloadValue","searchValue","q","setSearchValue","history","pushState","pathname","customEventHandler","customSubmitHandler","disableForm","resetForm","submitButtonDisabled","postFormWithApiCall","postData"],"sourceRoot":""}