{"version":3,"file":"static/js/Pagination.e269016b.chunk.js","mappings":"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","sources":["webpack://rrkallan-demo/./src/@rrkallan/ui-library/Pagination/resources/styles/pagination.module.scss?0e83","@rrkallan/ui-library/Pagination/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"pagination_container__ljfDz\",\"navigation\":\"pagination_navigation__u2Abt\",\"unit\":\"pagination_unit__9zu1y\",\"button\":\"pagination_button__ldmuC\",\"item\":\"pagination_item__Cu7oq\",\"info\":\"pagination_info__JeXI7\",\"text\":\"pagination_text__N+TUF\"};","import { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { validations, roundDown } from \"@rrkallan/js-helpers\";\nimport { usePagination, useBoundingClientRect } from \"@rrkallan/react-hooks\";\nimport styles from \"./resources/styles/pagination.module.scss\";\n\nfunction Pagination({\n    getPageContent,\n    data = [],\n    prefixSearchParam,\n    itemsPerPage = 16,\n    showing = Pagination.defaultProps.showing,\n    buttonPrevText = Pagination.defaultProps.buttonPrevText,\n    buttonNextText = Pagination.defaultProps.buttonNextText,\n    buttonFirstText = Pagination.defaultProps.buttonFirstText,\n    buttonLastText = Pagination.defaultProps.buttonLastText,\n    scrollToTop = false,\n}) {\n    const paginationNumberRef = useRef();\n    const { width } = useBoundingClientRect({ element: paginationNumberRef, delay: 5, includeUnit: false }) || {};\n    const { totalPages, totalItems, startNumber, endNumber, currentPage, currentData, ...paginated } = usePagination(\n        data,\n        itemsPerPage,\n        prefixSearchParam\n    );\n    const [pages, setPages] = useState(() => (!!totalPages && [...Array(totalPages).keys()].map((page) => page + 1)) || 0);\n    const [showMaxPageLinks, setShowMaxPageLinks] = useState(() => 0);\n    const [beginPageNumber, setBeginPageNumber] = useState(() => 0);\n    const [lastPageNumber, setLastPageNumber] = useState(() => 0);\n    const [charLengthTotalPages] = useState(() => {\n        const charLength = parseFloat(totalItems).toString().length;\n        return charLength < 2 ? 2 : charLength;\n    });\n\n    const onClickHandlerPagination = (event) => {\n        const { value } = event.currentTarget;\n\n        if (validations.number(value, true)) paginated.jump(value);\n\n        if ([\"first\", \"last\", \"next\", \"prev\"].includes(value)) paginated[value]();\n    };\n\n    useLayoutEffect(() => {\n        const possibleMaxPageLinks = roundDown(width / (1 + (charLengthTotalPages + 1) * 0.5)) || 0;\n        const isPossibleMaxPageLinksOdd = !!(possibleMaxPageLinks % 2);\n        const maxPageLinks = possibleMaxPageLinks - !isPossibleMaxPageLinksOdd;\n\n        setShowMaxPageLinks(maxPageLinks);\n    }, [charLengthTotalPages, width]);\n\n    useEffect(() => {\n        setPages(() => (!!totalPages && [...Array(totalPages).keys()].map((page) => page + 1)) || 0);\n    }, [totalPages]);\n\n    useEffect(() => {\n        const divededNumber = roundDown(showMaxPageLinks / 2);\n        let beginNumber = currentPage <= divededNumber ? 1 : currentPage - divededNumber;\n        let lastNumber = currentPage >= totalPages - divededNumber ? totalPages : currentPage + divededNumber;\n\n        if (beginNumber + showMaxPageLinks > totalPages) beginNumber = totalPages - showMaxPageLinks + 1;\n        if (lastNumber < showMaxPageLinks) lastNumber = showMaxPageLinks;\n\n        setBeginPageNumber(beginNumber);\n        setLastPageNumber(lastNumber);\n    }, [currentPage, showMaxPageLinks, totalPages]);\n\n    useEffect(() => {\n        if (scrollToTop) {\n            window.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: \"smooth\",\n            });\n        }\n\n        getPageContent(currentData());\n    }, [getPageContent, currentData, scrollToTop]);\n\n    if (!totalPages && !pages) return null;\n\n    return (\n        <section className={styles.container}>\n            <nav className={styles.navigation}>\n                {pages?.length > 1 && (\n                    <>\n                        <ul className={styles.unit} variant=\"text\">\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"first\"\n                                    disabled={currentPage === 1 ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to first page\"\n                                >\n                                    {buttonFirstText}\n                                </button>\n                            </li>\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"prev\"\n                                    disabled={currentPage === 1 ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to previous page\"\n                                >\n                                    {buttonPrevText}\n                                </button>\n                            </li>\n                        </ul>\n\n                        <ul\n                            className={styles.unit}\n                            variant={[\"number\", `charLength-${charLengthTotalPages}`].join(\" \")}\n                            ref={paginationNumberRef}\n                        >\n                            {pages.map((page) => {\n                                const itemState =\n                                    (page >= beginPageNumber && page <= lastPageNumber) || pages.length < showMaxPageLinks\n                                        ? \"visible\"\n                                        : \"hidden\";\n\n                                return (\n                                    <li key={page} className={styles.item} state={itemState}>\n                                        <button\n                                            className={styles.button}\n                                            type=\"button\"\n                                            onClick={onClickHandlerPagination}\n                                            value={page}\n                                            state={page === currentPage ? \"is-active\" : undefined}\n                                            disabled={page === currentPage ? \"disabled\" : undefined}\n                                            variant=\"number\"\n                                            title={`Go to page ${page}`}\n                                        >\n                                            {page}\n                                        </button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n\n                        <ul className={styles.unit} variant=\"text\">\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"next\"\n                                    disabled={currentPage === totalPages ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to next page\"\n                                >\n                                    {buttonNextText}\n                                </button>\n                            </li>\n                            <li className={styles.item}>\n                                <button\n                                    className={styles.button}\n                                    type=\"button\"\n                                    onClick={onClickHandlerPagination}\n                                    value=\"last\"\n                                    disabled={currentPage === totalPages ? \"disabled\" : undefined}\n                                    variant=\"text\"\n                                    title=\"Go to last page\"\n                                >\n                                    {buttonLastText}\n                                </button>\n                            </li>\n                        </ul>\n                    </>\n                )}\n            </nav>\n\n            <div className={styles.info}>\n                <span className={styles.text}>\n                    {showing\n                        .replace(\"%pagination.from%\", startNumber)\n                        .replace(\"%pagination.to%\", endNumber)\n                        .replace(\"%pagination.total%\", totalItems)}\n                </span>\n            </div>\n        </section>\n    );\n}\n\nPagination.defaultProps = {\n    buttonPrevText: \"Previous\",\n    buttonNextText: \"Next\",\n    buttonLastText: \"Last\",\n    buttonFirstText: \"First\",\n    showing: \"showing %pagination.from% to %pagination.to% of total %pagination.total%\",\n    data: [],\n    itemsPerPage: 16,\n    prefixSearchParam: undefined,\n    scrollTo: false,\n};\n\nPagination.propTypes = {\n    getPageContent: PropTypes.func.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({})),\n    buttonPrevText: PropTypes.string,\n    buttonNextText: PropTypes.string,\n    buttonLastText: PropTypes.string,\n    buttonFirstText: PropTypes.string,\n    showing: PropTypes.string,\n    itemsPerPage: PropTypes.number,\n    prefixSearchParam: PropTypes.string,\n    scrollTo: PropTypes.bool,\n};\n\nexport default Pagination;\n"],"names":["Pagination","getPageContent","data","prefixSearchParam","itemsPerPage","showing","defaultProps","buttonPrevText","buttonNextText","buttonFirstText","buttonLastText","scrollToTop","paginationNumberRef","useRef","width","useBoundingClientRect","element","delay","includeUnit","totalPages","totalItems","startNumber","endNumber","currentPage","currentData","paginated","usePagination","pages","setPages","useState","Array","keys","map","page","showMaxPageLinks","setShowMaxPageLinks","beginPageNumber","setBeginPageNumber","lastPageNumber","setLastPageNumber","charLengthTotalPages","charLength","parseFloat","toString","length","onClickHandlerPagination","event","value","currentTarget","validations","jump","includes","useLayoutEffect","possibleMaxPageLinks","roundDown","useEffect","divededNumber","beginNumber","lastNumber","window","scrollTo","top","left","behavior","className","styles","variant","type","onClick","disabled","undefined","title","join","ref","itemState","state","replace"],"sourceRoot":""}