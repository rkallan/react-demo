{"version":3,"file":"static/js/LoginForm.86966663.chunk.js","mappings":"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","sources":["@rrkallan/react-hooks/useDebounce/index.js","@rrkallan/react-hooks/usePagination/index.js","@rrkallan/react-hooks/useBoundingClientRect/index.js","@rrkallan/react-hooks/useScrollPosition/index.tsx","webpack://rrkallan-demo/./src/@rrkallan/ui-library/Form/resources/styles/form.module.scss?5edc","@rrkallan/ui-library/Form/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { validations, getCurrentUrlSearchAsObject, setUrlSearchParam } from \"@rrkallan/js-helpers\";\n\nconst usePagination = (data, itemsPerPage = 10, prefixSearchParam = undefined) => {\n    const [totalItems, setTotalItems] = useState(() => data?.length || 0);\n    const [totalPages, setTotalPages] = useState(() => Math.ceil(totalItems / itemsPerPage));\n    const [currentPage, setCurrentPage] = useState(() => 1);\n    const [endNumber, setEndNumber] = useState(() => Math.min(currentPage * itemsPerPage, totalItems));\n    const [startNumber, setStartNumber] = useState(() => Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1));\n    const [searchParamKeyPage] = useState(() => (prefixSearchParam ? `${prefixSearchParam}Page` : \"page\"));\n\n    const setPaginatorValues = useCallback(\n        ({ page }) => {\n            if (page) {\n                const param = {\n                    [searchParamKeyPage]: page,\n                };\n                setCurrentPage(() => page);\n                setUrlSearchParam(param);\n            }\n        },\n        [searchParamKeyPage]\n    );\n\n    const jump = useCallback(\n        (value) => {\n            const pageNumber = (validations.number(value, true) && parseInt(value, 10)) || undefined;\n            const page = Math.min(Math.max(1, pageNumber), totalPages);\n\n            setPaginatorValues({ page });\n        },\n        [setPaginatorValues, totalPages]\n    );\n\n    const prev = () => {\n        const page = currentPage > 1 ? Math.max(currentPage - 1, 1) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const next = () => {\n        const page = currentPage < totalPages ? currentPage < totalPages && Math.min(currentPage + 1, totalPages) : currentPage;\n\n        setPaginatorValues({ page });\n    };\n\n    const first = () => {\n        const page = 1;\n\n        setPaginatorValues({ page });\n    };\n\n    const last = () => {\n        const page = totalPages;\n\n        setPaginatorValues({ page });\n    };\n\n    const currentData = useCallback(() => {\n        const begin = startNumber - 1;\n        const end = endNumber;\n        const tempPageData = data.slice(begin, end);\n        const pageData = tempPageData.map((item, index) => {\n            const tempItem = {\n                ...item,\n                position: startNumber + index,\n            };\n            return tempItem;\n        });\n\n        return pageData;\n    }, [data, endNumber, startNumber]);\n\n    useEffect(() => {\n        if (currentPage) {\n            const end = Math.min(currentPage * itemsPerPage, totalItems);\n            const start = Math.max(currentPage * itemsPerPage - itemsPerPage + 1, 1);\n\n            setStartNumber(start);\n            setEndNumber(end);\n        }\n    }, [currentPage, itemsPerPage, totalItems]);\n\n    useEffect(() => {\n        const items = data?.length || 0;\n        const tempTotalPages = Math.ceil(items / itemsPerPage);\n        setCurrentPage((pageNumber) => {\n            return pageNumber > tempTotalPages ? tempTotalPages : pageNumber || 1;\n        });\n        setTotalItems(() => items);\n        setTotalPages(() => tempTotalPages);\n    }, [data, itemsPerPage]);\n\n    useEffect(() => {\n        const currentUrlSearchAsObject = getCurrentUrlSearchAsObject();\n        const page = currentUrlSearchAsObject[searchParamKeyPage];\n\n        if (page) jump(page);\n    }, [jump, searchParamKeyPage]);\n\n    return { next, prev, first, last, jump, currentData, currentPage, totalPages, totalItems, startNumber, endNumber };\n};\n\nexport default usePagination;\n","import { useState, useLayoutEffect } from \"react\";\n\nconst convertUnit = ({ data, unit = \"rem\", includeUnit = true }) => {\n    const divideValue = unit === \"rem\" ? 16 : 1;\n    const newData = Object.fromEntries(\n        Array.from(Object.keys(DOMRect.prototype), (key) => {\n            const valueCalculated = data[key] / divideValue || 0;\n            const value = includeUnit ? `${valueCalculated}${unit}` : valueCalculated;\n\n            return [key, value];\n        })\n    );\n    return newData;\n};\n\nfunction useBoundingClientRect({ element, delay = 100, includeUnit = true }) {\n    const [boundingClientRect, setBoundingClientRect] = useState(() => element?.current?.getBoundingClientRect());\n\n    useLayoutEffect(() => {\n        let timeoutId = null;\n        let ignore = false;\n\n        const resizeListener = () => {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => {\n                const clientRect = element?.current?.getBoundingClientRect() || {};\n                const value = convertUnit({ data: clientRect, includeUnit });\n\n                setBoundingClientRect(value);\n            }, delay);\n        };\n\n        if (!ignore) resizeListener();\n        if (!ignore) window.addEventListener(\"resize\", resizeListener);\n\n        return () => {\n            ignore = true;\n            window.removeEventListener(\"resize\", resizeListener);\n        };\n    }, [delay, element, includeUnit]);\n\n    return boundingClientRect;\n}\n\nexport default useBoundingClientRect;\n","import { useEffect, useState } from \"react\";\n\nconst getScrollY = () => window.scrollY || document.documentElement.scrollTop || Math.abs(document.body.getBoundingClientRect().top);\nconst getScrollX = () => window.scrollX || document.documentElement.scrollLeft || Math.abs(document.body.getBoundingClientRect().left);\n\ntype TypeUseScrollPosition = {\n    scrollPositionY: number;\n    scrollPositionX: number;\n};\n\nconst useScrollPosition = (): TypeUseScrollPosition => {\n    const [scrollPositionY, setScrollPositionY] = useState(() => getScrollY());\n    const [scrollPositionX, setScrollPositionX] = useState(() => getScrollX());\n\n    useEffect(() => {\n        const updatePosition = () => {\n            setScrollPositionY(window.pageYOffset);\n            setScrollPositionX(window.pageXOffset);\n        };\n\n        window.addEventListener(\"scroll\", updatePosition);\n\n        return () => window.removeEventListener(\"scroll\", updatePosition);\n    }, []);\n\n    return { scrollPositionY, scrollPositionX };\n};\n\nexport default useScrollPosition;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"form_container__Kkhio\",\"unit\":\"form_unit__+m9tE\"};","import { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport loadable from \"@loadable/component\";\n\nimport { serializeForm, formPostValidation, apiCall, getType, convertObjectKeys } from \"@rrkallan/js-helpers\";\nimport { useDebounce } from \"@rrkallan/react-hooks\";\nimport Loading from \"@rrkallan/ui-library/Loading\";\n\nimport styles from \"./resources/styles/form.module.scss\";\n\nconst InputTypeText = loadable(() => import(/* webpackChunkName: \"InputTypeText\" */ \"@rrkallan/ui-library/FormElements/InputfieldText\"), {\n    fallback: <Loading />,\n});\n\nconst SliderButton = loadable(() => import(/* webpackChunkName: \"SliderButton\" */ \"@rrkallan/ui-library/FormElements/SliderButton\"), {\n    fallback: <Loading />,\n});\n\nconst Button = loadable(() => import(/* webpackChunkName: \"Button\" */ \"@rrkallan/ui-library/FormElements/Button\"), {\n    fallback: <Loading />,\n});\n\nconst Textarea = loadable(() => import(/* webpackChunkName: \"Textarea\" */ \"@rrkallan/ui-library/FormElements/Textarea\"), {\n    fallback: <Loading />,\n});\n\nfunction Form({\n    attributes,\n    customEventHandler,\n    customSubmitHandler,\n    fieldsets,\n    disableForm,\n    postFormWithApiCall,\n    resetForm,\n    submitButtonDisabled,\n    postData,\n}) {\n    const [formElements, setFormElements] = useState([]);\n    const [buttonElements, setButtonElements] = useState([]);\n    const [formData, setFormData] = useState([]);\n    const [currentValue, setCurrentValue] = useState();\n    const [clearValue, setClearValue] = useState(false);\n    const [submitDisabled, setSubmitDisabled] = useState(submitButtonDisabled);\n    const [resetDisabled, setResetDisabled] = useState(true);\n    const debouncedCurrentValue = useDebounce(currentValue, 150);\n\n    const formValidation = useCallback(() => {\n        let hasError = 0;\n\n        if (!formElements.length) hasError += 1;\n\n        formElements.forEach((element) => {\n            if (element?.hasAttribute(\"state\") && element?.getAttribute(\"state\") !== \"isValid\") hasError += 1;\n        });\n\n        if (clearValue) setSubmitDisabled(true);\n\n        if (!clearValue) setSubmitDisabled(!!hasError);\n    }, [formElements, clearValue]);\n\n    const setElementsToState = (formObject, updateElements = false) => {\n        const totalElements = formElements.length + buttonElements.length;\n        if (formObject && (totalElements !== formObject.elements.length || updateElements)) {\n            const tempObject = [...formObject.elements].reduce(\n                (dataObject, element) => {\n                    const tempDataObject = dataObject;\n                    const { type } = element;\n                    const tagName = element.tagName.toLowerCase();\n\n                    if (element && (tagName === \"button\" || [\"submit\", \"reset\", \"button\"].includes(type)))\n                        tempDataObject.buttons.push(element);\n\n                    if (element && ![\"fieldset\", \"button\"].includes(tagName) && ![\"submit\", \"reset\", \"button\"].includes(type))\n                        tempDataObject.elements.push(element);\n\n                    return tempDataObject;\n                },\n                { elements: [], buttons: [] }\n            );\n\n            setButtonElements(tempObject.buttons);\n            setFormElements(tempObject.elements);\n\n            const data = fieldsets.reduce(\n                (dataObject, fieldset) => {\n                    const tempDataObject = dataObject;\n                    const { elements } = fieldset || {};\n\n                    tempDataObject.elements.push(...elements);\n\n                    return tempDataObject;\n                },\n                { attributes, elements: [] }\n            );\n\n            setFormData(data);\n\n            formValidation();\n        }\n    };\n\n    const setDisabledAttributeOnFieldsets = (disabled = true) => {\n        fieldsets.map((fieldset) => {\n            const currentFieldset = fieldset;\n            currentFieldset.disabled = disabled;\n\n            return disabled;\n        });\n    };\n\n    const handleFormInValid = (errorMessages) => {\n        const error = getType(errorMessages) === \"object\" ? Object.values(errorMessages) : [errorMessages];\n        const response = {\n            ok: false,\n            error,\n        };\n\n        setDisabledAttributeOnFieldsets(false);\n\n        return response;\n    };\n\n    const formApiCall = async ({ formPostUrl, data, method }) => {\n        const response = await apiCall({ url: formPostUrl, method, body: data });\n        const contentType = response?.headers?.get(\"content-type\")?.split(\";\")?.shift();\n        const isJsonResponse = contentType === \"application/json\";\n        const responseData = isJsonResponse\n            ? await response.json()\n            : { error: { message: \"System error contact your system administrator\" } };\n        const responseDataConverted = await convertObjectKeys({ data: responseData });\n\n        if (!response.ok) return handleFormInValid(responseDataConverted?.error);\n\n        return responseDataConverted;\n    };\n\n    const getResponse = async (formObject, data) => {\n        if (postFormWithApiCall) {\n            const { method } = formObject;\n            const formPostUrl = formObject.action;\n\n            const response = await formApiCall({ formPostUrl, data, method });\n\n            return response;\n        }\n\n        return {\n            ok: true,\n            status: 200,\n            data,\n        };\n    };\n\n    const disableButtons = useCallback(() => {\n        setSubmitDisabled(true);\n        setResetDisabled(true);\n    }, []);\n\n    const resetFormElements = useCallback(() => setClearValue(true), []);\n\n    const onResetHandler = () => {\n        disableButtons();\n        resetFormElements();\n    };\n\n    const onEventHandler = (event) => {\n        const formElement = event?.target;\n        const formObject = formElement?.form;\n        const formElementValue = formElement?.value || \"\";\n        const updateElementsInState = getType(customEventHandler) === \"function\" ? customEventHandler(event) : false;\n\n        if (clearValue) setClearValue(false);\n        if (currentValue !== formElementValue) setCurrentValue(formElementValue);\n\n        if (resetDisabled && event.type === \"change\") setResetDisabled(false);\n\n        setElementsToState(formObject, updateElementsInState);\n    };\n\n    const convertDataForAPI = (postDataObject) => {\n        const convertedData = Object.keys(postDataObject).reduce((data, key) => {\n            const newData = {\n                ...data,\n                [key]: postDataObject[key].values,\n            };\n\n            return newData;\n        }, {});\n\n        return convertedData;\n    };\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n        document.activeElement.blur();\n\n        disableButtons();\n        setDisabledAttributeOnFieldsets(true);\n\n        const formObject = event.currentTarget || event.target;\n        const formObjectData = serializeForm(formObject, formData);\n        const postDataObject = { ...postData, ...formObjectData.postData };\n        const errorMessages = formPostValidation(postDataObject);\n\n        if (errorMessages) {\n            const errorResponse = handleFormInValid(errorMessages);\n\n            if (customSubmitHandler) customSubmitHandler(errorResponse);\n            return;\n        }\n\n        const data = convertDataForAPI(postDataObject);\n        const response = getResponse(formObject, data);\n\n        formObject.reset();\n\n        if (customSubmitHandler) customSubmitHandler(response);\n\n        setDisabledAttributeOnFieldsets(false);\n        setClearValue(true);\n    };\n\n    useEffect(() => {\n        if ((debouncedCurrentValue || debouncedCurrentValue === \"\") && formElements) formValidation();\n    }, [debouncedCurrentValue, formElements, formValidation]);\n\n    useEffect(() => {\n        if (formElements) formValidation();\n    }, [formElements, formValidation]);\n\n    useEffect(() => {\n        setSubmitDisabled(submitButtonDisabled);\n    }, [submitButtonDisabled]);\n\n    useEffect(() => {\n        if (resetForm) {\n            disableButtons();\n            resetFormElements();\n        }\n    }, [disableButtons, resetForm, resetFormElements]);\n\n    return (\n        <form\n            {...attributes}\n            onSubmit={onSubmitHandler}\n            onReset={onResetHandler}\n            onChange={onEventHandler}\n            onFocus={onEventHandler}\n            onBlur={onEventHandler}\n        >\n            {fieldsets?.map((fieldset) => {\n                const { elements, disabled } = fieldset;\n                const disabledFieldset = disableForm || disabled || false;\n\n                return (\n                    <fieldset key={fieldset.id} className={styles.container} disabled={disabledFieldset}>\n                        <div className={styles.unit} variant={fieldset.variant || null}>\n                            {elements.map((formElement) => {\n                                const { id, node, ...element } = formElement;\n                                element.disabled = disabledFieldset || element.disabled;\n\n                                switch (node) {\n                                    case \"input\":\n                                        return <InputTypeText key={id} id={id} {...element} clearValue={clearValue} />;\n                                    case \"slider\":\n                                        return <SliderButton key={id} id={id} {...element} clearValue={clearValue} />;\n                                    case \"textarea\":\n                                        return <Textarea key={id} id={id} {...element} clearValue={clearValue} />;\n                                    case \"button\":\n                                        if (element.type === \"submit\") element.disabled = submitDisabled;\n\n                                        if (element.type === \"reset\") element.disabled = resetDisabled;\n\n                                        return <Button key={id} id={id} {...element} />;\n                                    default:\n                                        return null;\n                                }\n                            })}\n                        </div>\n                    </fieldset>\n                );\n            })}\n        </form>\n    );\n}\n\nForm.defaultProps = {\n    customEventHandler: undefined,\n    customSubmitHandler: undefined,\n    disableForm: false,\n    postFormWithApiCall: true,\n    resetForm: false,\n    submitButtonDisabled: true,\n    postData: undefined,\n};\n\nForm.propTypes = {\n    attributes: PropTypes.shape({}).isRequired,\n    customEventHandler: PropTypes.func,\n    customSubmitHandler: PropTypes.func,\n    fieldsets: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    disableForm: PropTypes.bool,\n    postFormWithApiCall: PropTypes.bool,\n    resetForm: PropTypes.bool,\n    submitButtonDisabled: PropTypes.bool,\n    postData: PropTypes.shape({}),\n};\n\nexport default Form;\n"],"names":["value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","data","itemsPerPage","prefixSearchParam","undefined","length","totalItems","setTotalItems","Math","ceil","totalPages","setTotalPages","currentPage","setCurrentPage","min","endNumber","setEndNumber","max","startNumber","setStartNumber","searchParamKeyPage","setPaginatorValues","useCallback","page","param","setUrlSearchParam","jump","pageNumber","validations","parseInt","prev","next","first","last","currentData","begin","end","slice","map","item","index","position","start","items","tempTotalPages","getCurrentUrlSearchAsObject","element","includeUnit","current","getBoundingClientRect","boundingClientRect","setBoundingClientRect","useLayoutEffect","timeoutId","ignore","resizeListener","unit","divideValue","Object","fromEntries","Array","from","keys","DOMRect","prototype","key","valueCalculated","convertUnit","window","addEventListener","removeEventListener","scrollY","document","documentElement","scrollTop","abs","body","top","scrollPositionY","setScrollPositionY","scrollX","scrollLeft","left","scrollPositionX","setScrollPositionX","updatePosition","pageYOffset","pageXOffset","InputTypeText","loadable","fallback","Loading","SliderButton","Button","Textarea","Form","attributes","customEventHandler","customSubmitHandler","fieldsets","disableForm","postFormWithApiCall","resetForm","submitButtonDisabled","postData","formElements","setFormElements","buttonElements","setButtonElements","formData","setFormData","currentValue","setCurrentValue","clearValue","setClearValue","submitDisabled","setSubmitDisabled","resetDisabled","setResetDisabled","debouncedCurrentValue","useDebounce","formValidation","hasError","forEach","hasAttribute","getAttribute","setDisabledAttributeOnFieldsets","disabled","fieldset","handleFormInValid","errorMessages","response","ok","error","getType","values","formApiCall","formPostUrl","method","apiCall","url","contentType","headers","get","split","shift","json","message","responseData","convertObjectKeys","responseDataConverted","getResponse","formObject","action","status","disableButtons","resetFormElements","onEventHandler","event","formElement","target","form","formElementValue","updateElementsInState","type","updateElements","totalElements","elements","tempObject","reduce","dataObject","tempDataObject","tagName","toLowerCase","includes","buttons","push","setElementsToState","onSubmit","preventDefault","activeElement","blur","currentTarget","formObjectData","serializeForm","postDataObject","formPostValidation","errorResponse","convertDataForAPI","reset","onReset","onChange","onFocus","onBlur","disabledFieldset","className","styles","variant","id","node","defaultProps"],"sourceRoot":""}